%!PS-Adobe- minimal conforming
%%Creator: Ceres-Oberon
%
% Institute for Computer Systems, ETH Zurich, 1990-1995
%
%!PS-Adobe- minimal conforming
%%Creator: Ceres-Oberon
%
% Institute for Computer Systems, ETH Zurich, 1990-1995
%
% m  moveto  x y -> -
% s  String  s -> -
% l  Line  x y w h -> -
% x  XLine  x y dx dy -> -
% c  scaled Circle  x y a b -> -
% b  shaded box  x y w h col -> -
% i  pattern image  x y w h mode  -> -
% p  Page  n -> -
% f  font setting  fntname -> -
% z Bezier cubic section  x1 y1 x2 y2 x3 y3 x0 y0 -> -
% u UseColor  r g b -> -

/bdef {bind def} bind def

/m {moveto} bdef

/s {show} bdef

/u {setrgbcolor} bdef

/l {
  /ph exch def
  /pw exch def
  newpath
  moveto
  pw 0 rlineto
  0 ph rlineto
  pw neg 0 rlineto
  closepath
  fill
} bdef

/x {
  /dy exch def
  /dx exch def
  newpath
  moveto
  dx dy rlineto
  0 setlinewidth	% was 0 (JS)
  stroke
} bdef

/c {
  /pb exch def
  /pa exch def
  newpath
  gsave
  translate
  1 pb pa div scale
  0 0 pa 0 360 arc
  0 setlinewidth % was 0 (JS)
  stroke
  grestore
} bdef

/shade {
  gsave
  col 0 eq {1 setgray} if
  col 1 eq {0.99 setgray} if
  col 2 eq {0.9 setgray} if
  col 3 eq {0.65 setgray} if
  col 4 eq {0.35 setgray} if
  col 5 eq {0 setgray} if
  fill
  grestore
} bdef

/max {
  /h1 exch def
  /h2 exch def
  h1 h2 lt {h2} {h1} ifelse
} bdef

/texture {
  gsave
  clip
  newpath
  col 6 eq
    { px 20 idiv 20 mul py ph add 20 idiv 20 mul moveto
      /maxwh pw ph max 20 add def
      maxwh 10 idiv 1 add
        { maxwh maxwh rlineto
          maxwh neg dup 20 sub rmoveto
        } repeat
    } if
  col 7 eq
    { px 20 idiv 20 mul py 20 idiv 20 mul moveto
      /maxwh pw ph max 20 add def
      maxwh 10 idiv 1 add
        { maxwh neg maxwh rlineto
          maxwh 20 add maxwh neg rmoveto
        } repeat
    } if
  col 8 eq
    { px 15 idiv 15 mul py 15 idiv 15 mul moveto
      /ph ph 25 add def
      pw 15 idiv 1 add
        { 0 ph rlineto
          15 ph neg rmoveto
        } repeat
   } if
  col 9 eq
    { px 15 idiv 15 mul py 15 idiv 15 mul moveto
      /pw pw 15 add def
      ph 15 idiv 1 add
       { pw 0 rlineto
          pw neg 15 rmoveto
        } repeat
   } if
  1 setlinewidth
  stroke
  grestore
} bdef

/b {
  /col exch def
  /ph exch def
  /pw exch def
  /py exch def
  /px exch def
  newpath
  px py moveto
  pw 0 rlineto
  0 ph rlineto
  pw neg 0 rlineto
  closepath
  col 6 lt {shade} {texture} ifelse
} bdef

/i { % pattern image follows procedure i immediately
  /mode exch def
  /ph exch def
  /pw exch def
  /py exch def
  /px exch def
  /picstr 256 string def
  /nofbytes pw 7 add 8 idiv ph mul def
  gsave
  px py translate
  pw mode 1 add mul ph mode 1 add mul scale
  pw ph 1 [pw 0 0 ph 0 0]
    {nofbytes 256 ge
      { currentfile picstr readhexstring pop
        /nofbytes nofbytes 256 sub def }
      { /picstr nofbytes string def
        currentfile picstr readhexstring pop
        /nofbytes 0 def
      } ifelse
    } image
  grestore
} bdef

/f {findfont setfont} bdef

/z {newpath moveto curveto 0 setlinewidth stroke } bdef    % Bezier cubic section. width was 0 (JS)

/p {/#copies exch def showpage restore save} bdef    % show page for Booklet
% /p {/#copies exch def} bdef    % show page for Booklet

/pl {gsave 2480 0 translate 90 rotate .7 .7 scale} bdef
/pr {2506 0 translate} bdef
/pp {grestore showpage restore save} bdef

/GlobalBuildGlyph {
    1 index /CharData get exch
    2 copy known not {pop /.notdef} if get
    dup 0 get 0
    2 index 1 4 getinterval aload pop
    setcachedevice
    dup 5 2 getinterval aload pop true
    5 4 roll /imageMaskMatrix get
    dup 4 6 index 7 get put
    dup 5 6 index 8 get put
    5 4 roll 9 1 getinterval cvx
    imagemask
} def

/GlobalBuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
} def

/OberonEncoding {
  dup 32 /space put dup 33 /exclam put dup 34 /quotedbl put dup 35 /numbersign put 
  dup 36 /dollar put dup 37 /percent put dup 38 /ampersand put dup 39 /quotesingle put dup 40 /parenleft put 
  dup 41 /parenright put dup 42 /asterisk put dup 43 /plus put dup 44 /comma put dup 45 /minus put 
  dup 46 /period put dup 47 /slash put dup 48 /zero put dup 49 /one put dup 50 /two put dup 51 /three put 
  dup 52 /four put dup 53 /five put dup 54 /six put dup 55 /seven put dup 56 /eight put dup 57 /nine put 
  dup 58 /colon put dup 59 /semicolon put dup 60 /less put dup 61 /equal put dup 62 /greater put 
  dup 63 /question put dup 64 /at put dup 65 /A put dup 66 /B put dup 67 /C put dup 68 /D put dup 69 /E put 
  dup 70 /F put dup 71 /G put dup 72 /H put dup 73 /I put dup 74 /J put dup 75 /K put dup 76 /L put 
  dup 77 /M put dup 78 /N put dup 79 /O put dup 80 /P put dup 81 /Q put dup 82 /R put dup 83 /S put 
  dup 84 /T put dup 85 /U put dup 86 /V put dup 87 /W put dup 88 /X put dup 89 /Y put dup 90 /Z put 
  dup 91 /bracketleft put dup 92 /backslash put dup 93 /bracketright put dup 94 /arrowup put dup 95 /underscore put 
  dup 96 /grave put dup 97 /a put dup 98 /b put dup 99 /c put dup 100 /d put dup 101 /e put dup 102 /f put 
  dup 103 /g put dup 104 /h put dup 105 /i put dup 106 /j put dup 107 /k put dup 108 /l put dup 109 /m put 
  dup 110 /n put dup 111 /o put dup 112 /p put dup 113 /q put dup 114 /r put dup 115 /s put dup 116 /t put 
  dup 117 /u put dup 118 /v put dup 119 /w put dup 120 /x put dup 121 /y put dup 122 /z put dup 123 /braceleft put 
  dup 124 /bar put dup 125 /braceright put dup 126 /tilde put dup 128 /Adieresis put dup 129 /Odieresis put 
  dup 130 /Udieresis put dup 131 /adieresis put dup 132 /odieresis put dup 133 /udieresis put dup 134 /acircumflex put 
  dup 135 /ecircumflex put dup 136 /icircumflex put dup 137 /oicircumflex put dup 138 /uicircumflex put 
  dup 139 /agrave put dup 140 /egrave put dup 141 /igrave put dup 142 /ograve put dup 143 /ugrave put 
  dup 144 /eacute put dup 145 /edieresis put dup 146 /idieresis put dup 147 /ccedilla put dup 148 /aacute put 
  dup 149 /ntilde put dup 155 /endash put dup 159 /hyphen put dup 171 /germandbls put
} bdef

/OberonXEncoding {
  dup 0 /ascii000 put dup 1 /ascii001 put dup 2 /ascii002 put dup 3 /ascii003 put 
  dup 4 /ascii004 put dup 5 /ascii005 put dup 6 /ascii006 put dup 7 /ascii007 put 
  dup 8 /ascii008 put dup 9 /ascii009 put dup 10 /ascii010 put dup 11 /ascii011 put 
  dup 12 /ascii012 put dup 13 /ascii013 put dup 14 /ascii014 put dup 15 /ascii015 put 
  dup 16 /ascii016 put dup 17 /ascii017 put dup 18 /ascii018 put dup 19 /ascii019 put 
  dup 20 /ascii020 put dup 21 /ascii021 put dup 22 /ascii022 put dup 23 /ascii023 put 
  dup 24 /ascii024 put dup 25 /ascii025 put dup 26 /ascii026 put dup 27 /ascii027 put 
  dup 28 /ascii028 put dup 29 /ascii029 put dup 30 /ascii030 put dup 31 /ascii031 put 
  dup 127 /ascii127 put dup 150 /ascii150 put dup 151 /ascii151 put dup 152 /ascii152 put 
  dup 153 /ascii153 put dup 154 /ascii154 put dup 155 /ascii155 put dup 156 /ascii156 put 
  dup 157 /ascii157 put dup 158 /ascii158 put dup 160 /ascii160 put dup 161 /ascii161 put 
  dup 162 /ascii162 put dup 163 /ascii163 put dup 164 /ascii164 put dup 165 /ascii165 put 
  dup 166 /ascii166 put dup 167 /ascii167 put dup 168 /ascii168 put dup 169 /ascii169 put
  dup 170 /ascii170 put dup 172 /ascii172 put dup 173 /ascii173 put dup 174 /ascii174 put
  dup 175 /ascii175 put dup 176 /ascii176 put dup 177 /ascii177 put dup 178 /ascii178 put
  dup 179 /ascii179 put dup 180 /ascii180 put dup 181 /ascii181 put dup 182 /ascii182 put
  dup 183 /ascii183 put dup 184 /ascii184 put dup 185 /ascii185 put dup 186 /ascii186 put
} bdef

/OberonYEncoding {
  dup 187 /ascii187 put dup 188 /ascii188 put dup 189 /ascii189 put dup 190 /ascii190 put
  dup 191 /ascii191 put dup 192 /ascii192 put dup 193 /ascii193 put dup 194 /ascii194 put
  dup 195 /ascii195 put dup 196 /ascii196 put dup 197 /ascii197 put dup 198 /ascii198 put
  dup 199 /ascii199 put dup 200 /ascii200 put dup 201 /ascii201 put dup 202 /ascii202 put
  dup 203 /ascii203 put dup 204 /ascii204 put dup 205 /ascii205 put dup 206 /ascii206 put
  dup 207 /ascii207 put dup 208 /ascii208 put dup 209 /ascii209 put dup 210 /ascii210 put
  dup 211 /ascii211 put dup 212 /ascii212 put dup 213 /ascii213 put dup 214 /ascii214 put
  dup 215 /ascii215 put dup 216 /ascii216 put dup 217 /ascii217 put dup 218 /ascii218 put
  dup 219 /ascii219 put dup 220 /ascii220 put dup 221 /ascii221 put dup 222 /ascii222 put
  dup 223 /ascii223 put dup 224 /ascii224 put dup 225 /ascii225 put dup 226 /ascii226 put
  dup 227 /ascii227 put dup 228 /ascii228 put dup 229 /ascii229 put dup 230 /ascii230 put
  dup 231 /ascii231 put dup 232 /ascii232 put dup 233 /ascii233 put dup 234 /ascii234 put
  dup 235 /ascii235 put dup 236 /ascii236 put dup 237 /ascii237 put dup 238 /ascii238 put
  dup 239 /ascii239 put dup 240 /ascii240 put dup 241 /ascii241 put dup 242 /ascii242 put
  dup 243 /ascii243 put dup 244 /ascii244 put dup 245 /ascii245 put dup 246 /ascii246 put
  dup 247 /ascii247 put dup 248 /ascii248 put dup 249 /ascii249 put dup 250 /ascii250 put
  dup 251 /ascii251 put dup 252 /ascii252 put dup 253 /ascii253 put dup 254 /ascii254 put
  dup 255 /ascii255 put 
} bdef

/OberonInit {
	systemdict /gcheck known {
  	mark
  	/HWResolution [300 300]
  	counttomark 2 idiv dup dict begin
  	{def} repeat
  	pop currentdict
  	end
     setpagedevice
  } if
  .24 .24 scale % A4
  % .34 .34 scale % A3
  % .24 .22 scale % Letter
  152 18 translate % Pluto portrait
  % 60 10 translate % UNIX portrait
  % 10 0 translate % V3 portrait
  % 2480.3 0 translate 90 rotate 12 106 translate % Pluto landscape
  % 2480.3 0 translate 90 rotate 7 42 translate % UNIX landscape
  % 2480.3 0 translate 90 rotate V3 landscape
  % 3507.9 0 translate 90 rotate 400 -100 translate % SPECIAL CLI
  (Syntax10.Scn.Fnt) f
  0 setgray
} bdef

/OberonClose {
} bdef
% Conversion of the Oberon font Syntax10.Scn.Fnt
% abstraction: 0, family: S, variant: 32
% height: 42

9 dict begin

/FontType 3 def
/FontMatrix [ 72 300 div  .24 div 0 0 72 300 div  .24 div 0 0] def
/FontBBox [-2 -10 38 31] def

/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding OberonEncoding OberonXEncoding OberonYEncoding /Encoding exch def

/CharData 122 dict def
CharData begin
/.notdef [0 0 0 0 0 1 1 0 0
<>] bdef
/space [11 0 0 0 0 1 1 0 0
<>] bdef
/quotedbl [12 2 17 10 25 8 8 -2 -17
<848484C6C6C6E7E7>] bdef
/numbersign [20 1 0 19 25 18 25 -1 0
<0E1C000C18000E1C000C18000E1C000C18000E1C000C1800060C00FDFBC0EFDF
 C00C18000E1C000C1800060C00FDFBC0EFDFC00C18000E1C000C18000E1C000C
 18000E1C000C18000E1C00>] bdef
/quotesingle [7 2 17 5 25 3 8 -2 -17
<808080C0C0C0E0E0>] bdef
/parenleft [15 3 -7 12 28 9 35 -3 7
<0100038007000E001C001C0038003800700070007000E000E000E000E000E000
 E000E000E000E000E000E000E000E000700070007000380038001C001C000E00
 070003800100>] bdef
/parenright [15 2 -7 11 28 9 35 -2 7
<4000E000700038001C001C000E000E0007000700070003800380038003800380
 038003800380038003800380038003800700070007000E000E001C001C003800
 7000E0004000>] bdef
/asterisk [21 1 0 20 19 19 19 -1 0
<0C06000C07000E0E00060C0003180003180001B00000A000F84000FFFFE00043
 E000A00001B000031800031800060C000E0E001C07000C0600>] bdef
/plus [21 1 0 19 19 18 19 -1 0
<00E00000C00000C00000E00000C00000C00000E00000C00000C000FFFFC0FFFF
 C000C00000E00000C00000C00000E00000C00000C00000E000>] bdef
/comma [7 2 -6 5 3 3 9 -2 6
<808080C0C0C0E0E0E0>] bdef
/minus [21 1 9 19 11 18 2 -1 -9
<FFFFC0FFFFC0>] bdef
/period [7 2 0 5 3 3 3 -2 0
<E0E0E0>] bdef
/slash [20 2 -2 20 27 18 29 -2 2
<C00000C000006000007000003000003800001800001C00000E00000600000700
 0003000003800001C00000C00000E000006000007000003800001800001C0000
 0C00000E000007000003000003800001800000C00000C0>] bdef
/zero [20 1 0 18 25 17 25 -1 0
<01C0000FF8000E3800380E00380E00700700700700600300F00780600300E003
 80E00380E00380E00380E00380600300F00780600300700700700700380E0038
 0E000E38000FF80001C000>] bdef
/one [20 1 0 13 25 12 25 -1 0
<0070007000700070007000700070007000700070007000700070007000700070
 4070E07078701C300E30033001B000700030>] bdef
/two [20 1 0 17 25 16 25 -1 0
<FFFF8FFF4000300018000E000700038001C000E0007000380038001C001C000E
 000E000E000E000E001C001C60787FF00FC0>] bdef
/three [20 2 0 16 25 14 25 -2 0
<1F80FFE0E0F000380038001C001C001C001C0038003800F07FC07E0001C00070
 00380018001C001C001C0038E078FFF01FC0>] bdef
/four [20 0 0 20 25 20 25 0 0
<001C00001C00001C00001C00001C00001C00001C00001C00FFFFF08FFFF0401C
 00601C00301C00181C00181C000C1C00061C00030C00019C00018C0000CC0000
 6C00002C00001C00000C00>] bdef
/five [20 3 0 17 25 14 25 -3 0
<7A007F8001E0007000380038001C001C001C001C001C0038003800F0FFE09680
 40006000700030003000380018001FFC1FFC>] bdef
/six [20 2 0 18 25 16 25 -2 0
<07C01FF03C3C300C70066006E003E007E003D007D006C80EC63CE3F860A06000
 7000300038001C000E00070003C000FE003E>] bdef
/seven [20 1 0 18 25 17 25 -1 0
<1000007800003800001C00001E00000E000007000007000003800003800001C0
 0000C00000E000007000007000003800003800001C00000C00000E0000070000
 0300000180FFFF80FFFF00>] bdef
/eight [20 2 0 18 25 16 25 -2 0
<07E01FF8781E700EE007C007E003C0076006700E383C0EF001800F703C1C700E
 6006E003C007E003E007700E781E1FF807E0>] bdef
/nine [20 2 0 18 25 16 25 -2 0
<7C007F0003C000E000700038001C000C000E000605061FC73C637013600BE00B
 C007E007C0076006600E300C3C3C0FF803E0>] bdef
/colon [10 4 0 7 16 3 16 -4 0
<E0E0E000000000000000000000E0E0E0>] bdef
/semicolon [10 4 -6 7 16 3 22 -4 6
<808080C0C0C0E0E0E000000000000000000000E0E0E0>] bdef
/less [21 1 0 20 19 19 19 -1 0
<0000E00003E0000F80003E0000F80003E0000F80003E0000F80000E00000F800
 003E00000F800003E00000F800003E00000F800003E00000E0>] bdef
/equal [21 1 6 19 14 18 8 -1 -6
<FFFFC0FFFFC0000000000000000000000000FFFFC0FFFFC0>] bdef
/greater [21 1 0 20 19 19 19 -1 0
<E00000F800003E00000F800003E00000F800003E00000F800003E00000E00003
 E0000F80003E0000F80003E0000F80003E0000F80000E00000>] bdef
/A [25 1 0 24 25 23 25 -1 0
<200008F0001E70001C70001C3800383800381800381C00701C00700FFFE00FFF
 E00600E00701C00701C003018003838001830001830000C70000C60000C60000
 6C00006C00003800003800>] bdef
/B [23 4 0 20 25 16 25 -4 0
<FFC0FFF0E03CE00EE00EE007E007E007E007E00EE00EE03CFFF0FFC0E070E018
 E01CE00CE00EE00EE01EE01CE07CFFF8FFE0>] bdef
/C [22 2 0 20 25 18 25 -2 0
<01FE0007FFC00F81C01E00003C0000380000780000700000F00000E00000E000
 00E00000E00000E00000E000007000007000007000003800003800001C00000F
 000007C00001FFC0007FC0>] bdef
/D [28 4 0 25 25 21 25 -4 0
<FFF000FFFE00E03F80E007C0E001E0E000E0E000F0E00070E00070E00078E000
 38E00038E00038E00038E00038E00078E00070E00070E000F0E000E0E001E0E0
 07C0E03F80FFFE00FFF000>] bdef
/E [20 4 0 18 25 14 25 -4 0
<FFFCFFFCE000E000E000E000E000E000E000E000E000E000FFF8FFF8E000E000
 E000E000E000E000E000E000E000FFF8FFF8>] bdef
/F [19 4 0 17 25 13 25 -4 0
<E000E000E000E000E000E000E000E000E000E000E000E000FFF8FFF8E000E000
 E000E000E000E000E000E000E000FFF8FFF8>] bdef
/G [25 2 0 21 25 19 25 -2 0
<01FF8007FFE00F80E01E00E03C00E03800E07800E07000E0F000E0E000E0E000
 E0E000E0E000E0E00000E000007000007000007000003800003800001C00000F
 000007C00001FFC0007FC0>] bdef
/H [27 4 0 22 25 18 25 -4 0
<E001C0E001C0E001C0E001C0E001C0E001C0E001C0E001C0E001C0E001C0E001
 C0E001C0FFFFC0FFFFC0E001C0E001C0E001C0E001C0E001C0E001C0E001C0E0
 01C0E001C0E001C0E001C0>] bdef
/I [12 4 0 7 25 3 25 -4 0
<E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0>] bdef
/K [24 4 0 22 25 18 25 -4 0
<E00180E003C0E00780E00F00E01E00E03C00E07800E0F000E1E000E3C000E780
 00EF0000EC0000E70000E38000E1C000E0E000E07000E03800E01C00E00E00E0
 0700E00380E001C0E00080>] bdef
/L [17 4 0 17 25 13 25 -4 0
<FFF8FFF8E000E000E000E000E000E000E000E000E000E000E000E000E000E000
 E000E000E000E000E000E000E000E000E000>] bdef
/M [37 2 0 35 25 33 25 -2 0
<E001C00380E001C00380E0036003807003600700700360070070077007007006
 3007003806300E00380E380E00380E380E00180C180C001C1C1C1C001C1C1C1C
 001C1C0C1C000C180C18000E380E38000E380E38000630063000063006300007
 7007700003600360000360036000036003600001C001C00001C001C000>] bdef
/N [28 4 0 24 25 20 25 -4 0
<E000C0E000F0E001B0E001B0E00330E00730E00630C00E70E01E30E01C70E038
 30C07870E0F070E0E030C1C070E3C070C78070E70030C60070CE0070CC0070D8
 0070D80070F00070300070>] bdef
/O [28 2 0 25 25 23 25 -2 0
<00BA0003FF800F83E00E00E03C007838003870001C70001CE0001E70000CE000
 0EE0000EE0000EE0000EE0000E70001CE0000E70001C70001C3800383C00780E
 00E00F83E003FF8000BA00>] bdef
/P [20 4 0 18 25 14 25 -4 0
<E000E000E000E000E000E000E000E000E000E000E000FF80FFE0E0F0E038E038
 E01CE01CE01CE01CE03CE038E0F8FFF0FF80>] bdef
/R [24 4 0 21 25 17 25 -4 0
<E00600E00780E00F00E01E00E01C00E03C00E07800E07000E0E000E1E000E3C0
 00FF0000FFE000E07800E01C00E01C00E00E00E00E00E00E00E00E00E01E00E0
 1C00E07C00FFF800FFE000>] bdef
/S [19 2 0 17 25 15 25 -2 0
<1FC0FFF0E07C001C001E000E000E000E001E001C007C03F80FE03F807C007000
 F000E000E000E000F00070007C0E1FFE07F0>] bdef
/T [19 0 0 19 25 19 25 0 0
<00E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E0
 0000E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000
 E00000E000FFFFE0FFFFE0>] bdef
/U [27 4 0 23 25 19 25 -4 0
<03F8000FFE003E0F803803807001C07001C07001C0E000E0E000E0E000E0E000
 E0E000E0E000E0E000E0E000E0E000E0E000E0E000E0E000E0E000E0E000E0E0
 00E0E000E0E000E0E000E0>] bdef
/V [23 1 0 22 25 21 25 -1 0
<00700000700000D80000D80000D80001CC00018C00038C000386000306000707
 000703000E03000E03800E01801C01C01C01C03C00C03800E03800E070007070
 0070F00078E00038200020>] bdef
/W [39 1 0 38 25 37 25 -1 0
<0070007000007000700000D800D80000D800D80000D800D80001CC01CC00018C
 018C00018C018C00038E018E0003860386000306030600070603070007070703
 0006030703000E030603800E030E01801C038E01C01C018C01C01C018C00C038
 019C00E03800D800E07800D800707000D80070F0007000783000700060>] bdef
/X [25 3 0 22 25 19 25 -3 0
<6000C0F001E07001C03803C01807801C07000E0E00061C00071C0003380001B0
 0000F00000400001E00001B000039800071C00070C000E0E001C07003C030078
 03807001C0F001E06000C0>] bdef
/Y [21 1 0 20 25 19 25 -1 0
<00E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E0
 0000E00001F00001B000039800071800070C000E0E000E06001C07003C038038
 03807801C0F001E03000C0>] bdef
/bracketleft [15 4 -6 11 27 7 33 -4 6
<FEFEC0E0C0E0C0E0C0E0C0E0C0E0C0E0C0E0C0E0C0E0C0E0C0E0C0E0C0E0C0FE
 FE>] bdef
/bracketright [15 3 -6 10 27 7 33 -3 6
<FEFE060E060E060E060E060E060E060E060E060E060E060E060E060E060E06FE
 FE>] bdef
/a [19 2 0 17 19 15 19 -2 0
<3E0E7F9EF098E058E038E038E038703878381E1803F800380038003860387038
 3C700FF003C0>] bdef
/b [22 3 0 19 28 16 28 -3 0
<1FC0FFF0F878E01CE00EE00EE007E007E007E007E007E007E007D00FC80EEC1E
 E77CE7F8E1E0E000E000E000E000E000E000E000E000E000>] bdef
/c [16 2 0 15 19 13 19 -2 0
<07C01FF03C3078007000F000E000E000E000E000E000E000F000700078003800
 1E000FF803F8>] bdef
/d [22 2 0 18 28 16 28 -2 0
<07871FE73EE778377013F00BE007E007E007E007E007E007E007700770073807
 1E1F0FFB03E7000700070007000700070007000700070007>] bdef
/e [19 2 0 17 19 15 19 -2 0
<07C01FF03C3C700C7000E000E000E000E000E000FFFEEFF66006700E300C381C
 1C380FF003C0>] bdef
/f [11 0 0 11 28 11 28 0 0
<1C001C001C001C001C001C001C001C001C001C001C001C001C001C001C001C00
 FFE0FFE01C001C001C001C001C000E000E000F0007E001E0>] bdef
/g [19 1 -9 18 19 17 28 -1 9
<0FC0007FF000703C00E00E00C00600C00700600700600700300E000C3E0003F8
 001FC0007C00007000003000000C000003C0000FF0001C3800181800380C0030
 1C00380C00301C001818001C33800FFF8003C000>] bdef
/h [22 3 0 18 28 15 28 -3 0
<E00EE00EE00EE00EE00EE00EE00EE00EE00EE00EE00EE00EE00ED00EC81EEC0E
 E73CE3FCE0F0E000E000E000E000E000E000E000E000E000>] bdef
/i [10 3 0 6 26 3 26 -3 0
<E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E000000000E0E0E0>] bdef
/k [19 3 0 18 28 15 28 -3 0
<E00CE01EE03CE078E0F0E1E0E3C0E780EF00FE00EC00E700E380E1C0E0E0E070
 E038E01CE008E000E000E000E000E000E000E000E000E000>] bdef
/l [10 3 0 6 28 3 28 -3 0
<E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0>] bdef
/m [34 3 0 30 19 27 19 -3 0
<E00E00E0E00E00E0E00E00E0E00E00E0E00E00E0E00E00E0E00E00E0E00E00E0
 E00E00E0E00E00E0E00E00E0E00E00E0E00E00E0D00D00E0C81C81E0EC0CC0E0
 E73C73C0E3F83FC0E0F00F00>] bdef
/n [22 3 0 18 19 15 19 -3 0
<E00EE00EE00EE00EE00EE00EE00EE00EE00EE00EE00EE00EE00ED00EC81EEC0E
 E73CE3FCE0F0>] bdef
/o [23 2 0 20 19 18 19 -2 0
<03F0000FFC001E1E00380700700380700380E001C0E001C0E001C0E001C0E001
 C0E001C0E001C07003807003803807001E1E000FFC0003F000>] bdef
/p [22 3 -9 19 19 16 28 -3 9
<E000E000E000E000E000E000E000E000E000E7C0DFF0F878E01CE00EE00EE007
 E007E007E007E007E007E007D00FC80EEC1EE77CE7F8E1E0>] bdef
/q [22 2 -9 18 19 16 28 -2 9
<00070007000700070007000700070007000707871FE73EE778377013F00BE007
 E007E007E007E007E007E0077007700738071E1F0FFF03F8>] bdef
/r [13 3 0 13 19 10 19 -3 0
<E000E000E000E000E000E000E000E000E000E000E000E000E000D000C800CE00
 E7C0E7C0E1C0>] bdef
/s [17 2 0 14 19 12 19 -2 0
<3F00FFC0E1E000E000700070007000E007E03FC07E007000E000E000E0007000
 78703FF00FC0>] bdef
/t [12 0 0 12 24 12 24 0 0
<07800FE01E701C201C001C001C001C001C001C001C001C001C001C001C000C00
 FBE0EFE018001C001C001C001C001C00>] bdef
/u [22 3 0 18 19 15 19 -3 0
<1E0E7F8E79CEE06EF026E016E00EE00EE00EE00EE00EE00EE00EE00EE00EE00E
 E00EE00EE00E>] bdef
/v [17 0 0 16 19 16 19 0 0
<0380038006C006C006400E600C601C301C30183038183818301C700C700C700E
 E006E0072004>] bdef
/w [28 0 0 27 19 27 19 0 0
<038038000380380006C06C0006C06C0006C06C000E40E6000C60C6000C60C600
 1C60C3001C21C30038318300383183803831818070138180701B01C0701B01C0
 E00B00C0E00E00E0200E0080>] bdef
/x [18 0 0 16 19 16 19 0 0
<600CE01E701C303818381C700C6006E003C0018003C0076006300E381C181C0C
 380E78073006>] bdef
/y [19 0 -9 17 19 17 28 0 9
<B00000FC00000E000006000003000003000003800001800001800001C00001C0
 000360000360000320000730000630000E18000E18000C18001C0C001C0C0018
 0E00380600380600380700700300700380100200>] bdef
/z [16 1 0 14 18 13 18 -1 0
<FFF8C7F86000300038001C000C000E0007000380038001C000C000E000600030
 FF18FFF8>] bdef
/braceleft [15 0 -6 12 27 12 33 0 6
<007001F00380030007000700060007000600070006000700060006000C001800
 E000E00018000C000600060007000600070006000700060007000300038001F0
 0070>] bdef
/bar [10 3 -6 6 27 3 33 -3 6
<E0C0E0C0E0C0E0C0E0C0E0C0E0C0E0C0E0C0E0C0E0C0E0C0E0C0E0C0E0C0E0C0
 E0>] bdef
/braceright [15 2 -6 14 27 12 33 -2 6
<E000F8001C000C000E000E0006000E0006000E0006000E000600060003000180
 0070007001800300060006000E0006000E0006000E0006000E000C001C00F800
 E000>] bdef
/tilde [23 2 6 21 13 19 7 -2 -6
<C00F00C03FC0C070C0C0E06061C0607F80601E0060>] bdef
  end

/BuildGlyph {GlobalBuildGlyph} bdef
/BuildChar {GlobalBuildChar} bdef

/imageMaskMatrix [1 0 0 1 0 0] bdef

currentdict

end

/Syntax10.Scn.Fnt exch definefont pop

% Conversion of the Oberon font Syntax12.Scn.Fnt
% abstraction: 0, family: S, variant: 32
% height: 50

9 dict begin

/FontType 3 def
/FontMatrix [ 72 300 div  .24 div 0 0 72 300 div  .24 div 0 0] def
/FontBBox [-4 -12 45 38] def

/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding OberonEncoding OberonXEncoding OberonYEncoding /Encoding exch def

/CharData 122 dict def
CharData begin
/.notdef [0 0 0 0 0 1 1 0 0
<>] bdef
/space [11 0 0 0 0 1 1 0 0
<>] bdef
/quotedbl [14 3 21 12 31 9 10 -3 -21
<820082008200C300C300C300C300E380E380E380>] bdef
/quotesingle [8 3 21 6 31 3 10 -3 -21
<808080C0C0C0C0E0E0E0>] bdef
/parenleft [16 4 -7 14 32 10 39 -4 7
<008001C0030007000C000C00180018003000300030006000700060006000E000
 6000E0006000E0006000E0006000E00060006000700060003000300030001800
 18000C000C000700030001C00080>] bdef
/parenright [16 2 -7 12 32 10 39 -2 7
<4000E000300038000C000C0006000600030003000300018003800180018001C0
 018001C0018001C0018001C0018001C001800180038001800300030003000600
 06000C000C0038003000E0004000>] bdef
/asterisk [26 2 0 24 22 22 22 -2 0
<0C00C01C00E00E01C006018003030003030001860000CC0000CC00003000FFFF
 FCFFFFFC00300000CC0000CC000186000303000303000601800E01C01C00E00C
 00C0>] bdef
/plus [26 2 0 24 22 22 22 -2 0
<003000003000003000003000003000003000003000003000003000003000FFFF
 FCFFFFFC00300000300000300000300000300000300000300000300000300000
 3000>] bdef
/comma [10 4 -7 8 4 4 11 -4 7
<808080C0C0C0E0E0E0F0F0>] bdef
/minus [26 2 10 24 12 22 2 -2 -10
<FFFFFCFFFFFC>] bdef
/period [11 4 0 8 4 4 4 -4 0
<F0F0F0F0>] bdef
/slash [20 4 -1 19 31 15 32 -4 1
<4000E0006000600030003000380018001C000C000C0006000600070003000300
 0180018001C000C000E00060006000300030003800180018000C000C000E0004
 >] bdef
/zero [24 2 0 22 30 20 30 -2 0
<01F80007FE000F0F001C03803801C03801C07000E07000E0700060E00070E000
 70E00070E00070E00070E00070E00070E00070E00070E00070E00070E0007070
 00E07000E07000E03801C03801C01C03800F0F0007FE0001F800>] bdef
/one [24 2 0 14 30 12 30 -2 0
<0070007000700070007000700070007000700070007000700070007000700070
 00700070007000704070E070707038701C700E700770037001F000F0>] bdef
/two [24 2 0 20 30 18 30 -2 0
<FFFFC0FFFFC0C000007000003800001C00000E000007000003800001E00000E0
 00007800003800001C00000E00000E0000070000070000038000038000038000
 0380000380000380000780000700600F00783E003FFC000FF000>] bdef
/three [24 3 0 20 30 17 30 -3 0
<3FE000FFF800C03E00000E000007000007000003800003800003800003800003
 80000700000700000E00003C001FE0001FE000003800000C00000E0000060000
 0700000700000700000700000F00000E00603E007FFC001FF000>] bdef
/four [24 1 0 23 30 22 30 -1 0
<0007000007000007000007000007000007000007000007000007007FFFFCFFFF
 FCC007006007007007003807001807001C07000E070006070007070003870001
 870001C70000E700006700003300003300001B00000F00000F00>] bdef
/five [24 3 0 21 30 18 30 -3 0
<3FC000FFF000C07C00001E00000F000007800003800003C00001C00001C00001
 C00001C00001C00001C0C003C0E00380D00780DC1F00CFFE00E3F80060000060
 00007000007000007000003000003800003800003FFF803FFF80>] bdef
/six [24 3 0 22 30 19 30 -3 0
<03F0000FFE001F0F803C03803801C07001C07000E0E000E0E000E0E000E0E000
 E0F000E0D001E0D801C0CC03C0E70F80E3FF00E0FC0060000070000070000038
 00003800001C00000E000007000003C00001F000007FE0000FE0>] bdef
/seven [24 2 0 22 30 20 30 -2 0
<1800003800001C00001C00000E00000E000007000007000003800003800001C0
 0001E00000E000007000007000003800003800001C00001C00000E00000E0000
 07000007800003800001C00001C00000E0000070FFFFF0FFFFE0>] bdef
/eight [24 3 0 22 30 19 30 -3 0
<07F8001FFF003C0F007003C06001C0E001E0C000E0E000E0C000E0E000E07001
 C07001C01807801E1F0007FC0001E00007F8001F1E001C060038038078018070
 00C07001C07000C07001C03801803803801E0F000FFE0003F800>] bdef
/nine [24 2 0 21 30 19 30 -2 0
<FE0000FFC00001F000007800001C00000E000007000003800003800001C00001
 C00000C007E0E01FF8E03E1CE0780660700360F00160E001E0E000E0E000E0E0
 00E0E000E0E001C07001C07003803807803E1F000FFE0001F800>] bdef
/colon [11 4 0 8 20 4 20 -4 0
<F0F0F0F0000000000000000000000000F0F0F0F0>] bdef
/semicolon [11 4 -7 8 20 4 27 -4 7
<808080C0C0C0E0E0E0F0F0000000000000000000000000F0F0F0F0>] bdef
/equal [26 2 7 24 16 22 9 -2 -7
<FFFFFCFFFFFC000000000000000000000000000000FFFFFCFFFFFC>] bdef
/greater [26 2 0 24 22 22 22 -2 0
<C00000F000003C00000F000003C00000F000003C00000F000003C00000700000
 1C00001C0000F00003C0000F00007C0001F00007C0001F00007C0000F00000C0
 0000>] bdef
/at [37 2 -2 35 30 33 32 -2 2
<00BF00000003D5000000070003C0000E0007F0001C000638001800061C003807
 860C00301FC60E00303C6606007038160700607016030060380E0300E0700E03
 8060700E0300E0700E038060700E0380E0300E030060700E0380E0380E030060
 380E0380601C0E0300700E0E07003007AE07003001FE06001800000E00180000
 0C000E00001C000600003800038000700000E001E000007AAF80000017F40000
 >] bdef
/A [26 0 -1 27 30 27 31 0 1
<20000080E00001E0700001C0700001C0380003C038000380180003801C000780
 1C0007000E000F000E000E000E000E0007FFFE0007FFFC0003001C0003803800
 0180380001C0780001C0700000C0700000E0E0000060E0000071C0000071C000
 0031C000003B8000001B8000001B0000001F0000000E0000000E0000>] bdef
/B [25 5 0 23 30 18 30 -5 0
<FFC000FFF800E07E00E00F00E00700E00780E00380E003C0E00380E003C0E003
 80E00780E00700E00F00E03C00FFE000FFE000E03C00E00E00E00700E00700E0
 0380E00380E00380E00780E00700E00F00E03E00FFFC00FFF000>] bdef
/C [28 3 0 26 30 23 30 -3 0
<005F4001FFF007C03C0F000E1E00043C0000380000780000700000700000E000
 00700000E00000E00000E00000E00000E00000E00000700000E0000070000070
 00003800003800001C00000E000007000403E03E00FFFC0017A0>] bdef
/D [32 5 0 30 30 25 30 -5 0
<FFFA0000FFFF8000E00FE000E001F000E0007800E0003C00E0001C00E0000E00
 E0000E00E0000700E0000700E0000700E0000380E0000700E0000380E0000380
 E0000700E0000380E0000700E0000700E0000700E0000E00E0000E00E0001C00
 E0003C00E0007800E001F000E00FE000FFFF8000FFFA0000>] bdef
/E [23 5 0 20 30 15 30 -5 0
<FFFEFFFEE000E000E000E000E000E000E000E000E000E000E000E000FFFEFFFE
 E000E000E000E000E000E000E000E000E000E000E000E000FFFEFFFE>] bdef
/F [21 5 0 20 30 15 30 -5 0
<E000E000E000E000E000E000E000E000E000E000E000E000E000E000FFFEFFFE
 E000E000E000E000E000E000E000E000E000E000E000E000FFFEFFFE>] bdef
/G [30 3 0 27 30 24 30 -3 0
<005F4001FFF807C03F0F00071E00073C0007380007780007700007700007E000
 07700007E00007E00007E00007E00000E00000E00000700000E0000070000070
 00003800003800001C00000E000007000403E03E00FFFC0017A0>] bdef
/H [31 5 0 27 30 22 30 -5 0
<E0001CE0001CE0001CE0001CE0001CE0001CE0001CE0001CE0001CE0001CE000
 1CE0001CE0001CE0001CFFFFFCFFFFFCE0001CE0001CE0001CE0001CE0001CE0
 001CE0001CE0001CE0001CE0001CE0001CE0001CE0001CE0001C>] bdef
/I [12 5 0 8 30 3 30 -5 0
<E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0>] bdef
/K [26 5 0 26 30 21 30 -5 0
<E00030E00078E000F0E001E0E003C0E00780E00780E01E00E01E00E03800E078
 00E0F000E1E000E3C000E78000EE0000E70000E38000E1C000E0E000E07000E0
 3800E01C00E00E00E00700E00380E001C0E001E0E00070E00060>] bdef
/L [20 5 0 21 31 16 31 -5 0
<FFFEFFFEE000E000E000E000E000E000E000E000E000E000E000E000E000E000
 E000E000E000E000E000E000E000E000E000E000E000E000E000E0000000>] bdef
/M [41 3 0 39 30 36 30 -3 0
<C001E00070E001E00070E001F00070E003B000E06003B000E07003B800E07003
 1800E070071800E070071C01C030071C01C0380E0C01C0380E0E01C0380E0E03
 80181C060380181C0703801C1C0703801C3C0303801C380387000C380187000C
 380187000C7001C7000E7001C6000E7000C600066000CE0006E000EE0006E000
 6E0006E0006C0003C0003C0003C0003C0003C0003C00>] bdef
/N [31 5 0 27 30 22 30 -5 0
<E00030C0007CE0007CC000ECE001ECC001CCE0038CC0039CE0070CC00F1CE00E
 0CC01E1CE01C0CC0381CE0380CC0701CE0F00CC0E01CE1E00CC3C01CE3800CC7
 801CE7000CCE001CCE000CDC001CDC000CF8001CF0000C30001C>] bdef
/O [33 3 0 31 30 28 30 -3 0
<007FE00001FFF80007C03E000F000F001E0007803C0003C0380001C0780001E0
 700000E0700000E0F00000F0E0000070E0000070E0000070E0000070E0000070
 E0000070E0000070E0000070F00000F0700000E0700000E0780001E0380001C0
 3C0003C01E0007800F000F0007C03E0001FFF800007FE000>] bdef
/P [22 5 0 21 30 16 30 -5 0
<E000E000E000E000E000E000E000E000E000E000E000E000E000E000FFE0FFF8
 E03CE00EE00EE007E007E007E007E007E007E00EE00EE03CFFF8FFE0>] bdef
/R [24 5 0 26 30 21 30 -5 0
<E00060E00078E000F0E001E0E001C0E003C0E00780E00F00E00E00E01E00E03C
 00E03800E07000E0F000FFC000FFC000E07800E01C00E00E00E00E00E00700E0
 0700E00700E00700E00700E00E00E00E00E03C00FFF800FFE000>] bdef
/S [23 3 0 21 30 18 30 -3 0
<1FF0007FFC00F01E004007000007000003800003800003800003800003800007
 80000700000F00003E0000FC0003F0000FC0001F00003C000038000078000070
 00007000007000007000007800003800803E03C00FFF8003FE00>] bdef
/T [22 1 0 22 30 21 30 -1 0
<0070000070000070000070000070000070000070000070000070000070000070
 0000700000700000700000700000700000700000700000700000700000700000
 7000007000007000007000007000007000007000FFFFF8FFFFF8>] bdef
/U [31 5 0 27 30 22 30 -5 0
<03FE000FFF801F03E03C00E0380070700038700038E0001CE0001CE0001CE000
 0CE0001CE0000CE0001CE0000CE0001CE0000CE0001CE0000CE0001CE0000CE0
 001CE0000CE0001CE0000CE0001CE0000CE0001CE0000CE0001C>] bdef
/V [26 0 0 27 30 27 30 0 0
<000E0000000E0000001F0000001B0000003B0000003B8000007180000071C000
 0071C00000E0C00000E0E00001C0600001C0700003C070000380300003803800
 0700180007001C000F001C000E000E000E000E001E0006001C0007003C000700
 3800038038000380780001C0700001C0F00000E0300000C0>] bdef
/W [45 1 0 45 30 44 30 -1 0
<003800038000003800038000006C0006C000006C0006C000006C0006C00000EE
 000EE00000E6000E600000C7000C700001C7001C700001C3001C30000183801C
 38000383803838000381803818000781C0381C000701C0701C000700C0700E00
 0F00E0700E000E0060E006000E0070E007001E0070E007001C0030C003001C00
 39C003803C0039C00380380019C0018038001D8001C078000D8001C070000D80
 00E070000F0000E0F00007000070600007000060>] bdef
/X [25 1 0 24 30 23 30 -1 0
<600018E0001E7000383800783800701C00F00E00E00E01C00703C00383800387
 8001C70000CE0000EE00007C00003800007C0000FC0000EE0001C60003C70003
 83800783800F01C00E00E01E00E03C007038003878003C100010>] bdef
/Y [22 0 0 23 30 23 30 0 0
<0038000038000038000038000038000038000038000038000038000038000038
 00003800003800003800003800007C0000EE0000E60001C70003838003838007
 01C00F00E00E00E01C00703C003838003878001CF0000E60000C>] bdef
/Z [20 1 0 20 30 19 30 -1 0
<7FFFE0FFFFE0E000007000007800003800001C00001C00000E00000E00000700
 0003800003800001C00001E00000E000007000007000003800003C00001C0000
 0E00000E000007000003800003800001C00000E0FFFFE0FFFFC0>] bdef
/bracketleft [16 5 -6 14 32 9 38 -5 6
<AA80FF80C000E000C000E000C000E000C000E000C000E000C000E000C000E000
 C000E000C000E000C000E000C000E000C000E000C000E000C000E000C000E000
 C000E000C000E000FF80AA80>] bdef
/bracketright [16 2 -6 11 32 9 38 -2 6
<AA80FF8001800380018003800180038001800380018003800180038001800380
 0180038001800380018003800180038001800380018003800180038001800380
 0180038001800380FF80AA80>] bdef
/arrowup [26 2 0 24 23 22 23 -2 0
<0030000030000030000030000030000030000030000030000030000030000030
 00403008E0301C7030383830701C30E00E31C007338003330001B60000B40000
 7800003000>] bdef
/a [21 3 0 21 22 18 22 -3 0
<3E07007F8FC070CC40E02C00E01C00C01C00E01C00E01C00601C00701C003C1C
 000FFC0002FC00001C00001C00001C00001C00601C00701C003838001FF80007
 F000>] bdef
/b [24 4 0 22 34 18 34 -4 0
<FFC000FFF000E03C00E00E00E00700E00300E00380E00180E001C0E001C0E001
 C0E001C0E001C0E001C0E001C0E001C0D003C0D80380CC0780C70F00E3FE00E0
 F800E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000
 E00000E00000>] bdef
/c [19 2 0 18 22 16 22 -2 0
<07E01FF83C1E78077002F000E000E000E000E000E000E000E000E00060007000
 300038001C000F0703FF00F8>] bdef
/d [24 2 0 20 34 18 34 -2 0
<07C1C01FF1C03C38C0780CC07006C0F002C0E001C0E001C0E001C0E001C0E001
 C0E001C0E001C0E001C06001C07001C03001C03801C01C01C00F01C003FFC000
 FFC00001C00001C00001C00001C00001C00001C00001C00001C00001C00001C0
 0001C00001C0>] bdef
/e [21 2 0 19 22 17 22 -2 0
<07E0001FF8003C1E00780700700200F00000E00000E00000E00000E00000E000
 00E00000FFFF80FFFF006003807003003003003807001806000E0E0007FC0001
 F000>] bdef
/f [13 1 0 14 34 13 34 -1 0
<0E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E00
 0E000E000E000E00FFF8FFF80E000E000E000E000E000E0006000700070003C0
 01F80078>] bdef
/g [21 2 -12 20 22 18 34 -2 12
<0FE0003FFC00701E00E00700E00380C00380C001C0C001C0E001C06003C03003
 801807800C3F0003FC003FE000FC0000C00000C000007000001C000003E0000F
 F8001C1C00180C00380E00300600300600300600300600380E00180C001C1C00
 0FF1C003FFC0>] bdef
/h [25 4 0 21 34 17 34 -4 0
<E00380E00380E00380E00380E00380E00380E00380E00380E00380E00380E003
 80E00380E00380E00380E00380E00380D00380D80380CC0700E60F00E3FE00E0
 F800E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000
 E00000E00000>] bdef
/i [11 4 0 7 30 3 30 -4 0
<E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E00000000000E0E0E0>] bdef
/j [11 -2 -12 7 30 9 42 2 12
<F000FC001E000700070003000380038003800380038003800380038003800380
 0380038003800380038003800380038003800380038003800380038003800380
 0380038000000000000000000000038003800380>] bdef
/k [22 4 0 20 34 16 34 -4 0
<E006E00FE01EE01CE078E078E0E0E1E0E3C0E780EF00EE00E700E380E1C0E0E0
 E070E038E01CE00EE007E002E000E000E000E000E000E000E000E000E000E000
 E000E000>] bdef
/l [11 4 0 7 34 3 34 -4 0
<E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0
 E0E0>] bdef
/m [39 4 0 35 22 31 22 -4 0
<E003800EE003800EE003800EE003800EE003800EE003800EE003800EE003800E
 E003800EE003800EE003800EE003800EE003800EE003800EE003800EE003800E
 D003400ED803600ECC07301CE60E183CE3FE0FF8E0F803E0>] bdef
/n [25 4 0 21 22 17 22 -4 0
<E00380E00380E00380E00380E00380E00380E00380E00380E00380E00380E003
 80E00380E00380E00380E00380E00380D00380D80380CC0700E60F00E3FE00E0
 F800>] bdef
/o [24 2 0 22 22 20 22 -2 0
<03FC000FFF001E07803801C03000C07000E0600060E00070E00070E00070E000
 70E00070E00070E00070E000706000E07000E03001C03801C01E07800FFF0003
 FC00>] bdef
/p [24 4 -12 22 22 18 34 -4 12
<E00000E00000E00000E00000E00000E00000E00000E00000E00000E00000E000
 00E00000FFC000FFF000E03C00E00E00E00700E00300E00380E00180E001C0E0
 01C0E001C0E001C0E001C0E001C0E001C0E001C0D003C0D80380CC0780C70F00
 E3FE00E0F800>] bdef
/q [24 2 -12 20 22 18 34 -2 12
<0001C00001C00001C00001C00001C00001C00001C00001C00001C00001C00001
 C00001C007C1C01FF1C03C38C0780CC07006C0F002C0E001C0E001C0E001C0E0
 01C0E001C0E001C0E001C0E001C06001C07001C03001C03801C01C01C00F01C0
 03FFC000FFC0>] bdef
/r [15 4 0 15 22 11 22 -4 0
<E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000E000
 D000D800CE00E7E0E7E0E1E0>] bdef
/s [17 2 0 15 22 13 22 -2 0
<3F80FFE0C0F000700038003800380038007001F007E01F803E0078007000E000
 E000E000700078183FF80FE0>] bdef
/t [14 1 0 14 29 13 29 -1 0
<03E007F80F180E000E000E000E000E000E000E000E000E000E000E000E000E00
 0E000E000E000E00FFF8FFF80E000E000E000E000E000E000E00>] bdef
/u [25 4 0 21 22 17 22 -4 0
<0F83803FE380783380701980E00D80E00580E00380E00380E00380E00380E003
 80E00380E00380E00380E00380E00380E00380E00380E00380E00380E00380E0
 0380>] bdef
/v [18 0 0 18 22 18 22 0 0
<01C00001C0000360000360000360000730000730000638000E18000E18000E1C
 001C0C001C0C001C0E00380600380600380700700300700380F00380E001C060
 0180>] bdef
/w [33 0 0 33 22 33 22 0 0
<01C003800001C003800003E007C000036006C000036006C00007300E60000730
 0C600006300C70000E381C30000E181C30000E181838001C1C3818001C0C381C
 001C0C301C00380E700C003806700E003806600E007003600600700360070070
 03C00700E001C003806001C00300>] bdef
/x [20 2 0 18 22 16 22 -2 0
<C006E00F600E701C383818380C700C7006E002C001C00380034007600E300E30
 1C181C1C380E7006F0076003>] bdef
/y [18 -3 -12 18 22 21 34 3 12
<F80000FE00000F000003800001C00000C00000E0000060000070000030000030
 00003800003800003800006C00006C00006C0000E60000E60000C70001C30001
 C30001C3800381800381800381C00700C00700C00700E00E00600E00701E0070
 1C00380C0030>] bdef
/z [19 2 0 17 22 15 22 -2 0
<7FFEFFFEC0006000380038001C001E000E0007000780038001C001E000E00070
 00380038000C0006FFFEFFFC>] bdef
/tilde [26 2 7 24 15 22 8 -2 -7
<C003C0C00FF0C01C38E0381860701C70E00C3FC00C0F000C>] bdef
/udieresis [25 4 0 21 30 17 30 -4 0
<0F83803FE380783380701980E00D80E00580E00380E00380E00380E00380E003
 80E00380E00380E00380E00380E00380E00380E00380E00380E00380E00380E0
 03800000000000000000000000000000001C1C001C1C001C1C00>] bdef
  end

/BuildGlyph {GlobalBuildGlyph} bdef
/BuildChar {GlobalBuildChar} bdef

/imageMaskMatrix [1 0 0 1 0 0] bdef

currentdict

end

/Syntax12.Scn.Fnt exch definefont pop

% Conversion of the Oberon font Syntax16.Scn.Fnt
% abstraction: 0, family: S, variant: 32
% height: 67

9 dict begin

/FontType 3 def
/FontMatrix [ 72 300 div  .24 div 0 0 72 300 div  .24 div 0 0] def
/FontBBox [-3 -16 59 48] def

/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding OberonEncoding OberonXEncoding OberonYEncoding /Encoding exch def

/CharData 122 dict def
CharData begin
/.notdef [0 0 0 0 0 1 1 0 0
<>] bdef
/space [17 0 0 0 0 1 1 0 0
<>] bdef
/minus [34 2 14 31 17 29 3 -2 -14
<FFFFFFF8FFFFFFF8FFFFFFF8>] bdef
/colon [12 5 0 9 26 4 26 -5 0
<F0F0F0F0000000000000000000000000000000000000F0F0F0F0>] bdef
/A [35 -1 0 34 40 35 40 1 0
<3000000180F0000001E078000001E078000003E03C000003C03C000007C03C00
 0007801E000007801E00000F800F00000F000F00001F000F00001E000780001E
 000780003E0003C0003C0003FFFFFC0001FFFFF80001FFFFF80001C000780000
 E000F00000E000F00000F001E000007001E000007803E000003803C000003C03
 C000001C078000001C078000001E0F8000000E0F0000000E0F000000071E0000
 00071E000000071C000000031C00000003BC00000001B800000001B800000000
 F000000000F00000>] bdef
/D [43 6 0 39 40 33 40 -6 0
<ABFE800000FFFFF80000FEABFE0000F0007F8000F0000FC000F00003F000F000
 01F000F00000F800F000007C00F000003C00F000003E00F000001E00F000001F
 00F000000F00F000000F00F000000F80F000000780F000000780F000000780F0
 00000780F000000780F000000780F000000780F000000780F000000F80F00000
 0F00F000000F00F000001F00F000001E00F000003E00F000003C00F000007C00
 F00000F800F00001F000F00003F000F0000FC000F0007F8000FEABFE0000FFFF
 F80000ABFE800000>] bdef
/L [27 6 0 27 40 21 40 -6 0
<FFFFF8FFFFF8FFFFF8F00000F00000F00000F00000F00000F00000F00000F000
 00F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000F0
 0000F00000F00000F00000F00000F00000F00000F00000F00000F00000F00000
 F00000F00000F00000F00000F00000F00000F00000F00000>] bdef
/O [45 3 0 41 40 38 40 -3 0
<0002FD0000001FFFE000007FFFF80000FD02FC0003F0003F0003C0000F000F80
 0007C00F000003C01E000001E01E000001E03C000000F03C000000F078000000
 7878000000787800000078F00000003CF00000003CF00000003CF00000003CF0
 0000003CF00000003CF00000003CF00000003CF00000003CF00000003C780000
 0078780000007878000000783C000000F03C000000F01E000001E01E000001E0
 0F000003C00F800007C003C0000F0003F0003F0000FD02FC00007FFFF800001F
 FFE0000002FD0000>] bdef
/a [28 2 0 27 30 25 30 -2 0
<0FE03E001FF87F803F5C79807C06700078037000F801F0007800F000F000F000
 7800F0007800F0007800F0003C00F0003E00F0000F00F00007E0F00001FEF000
 003FF0000003F0000000F0000000F0000000F0000000F0000000F0001800F000
 3800F0001E01F0000F81E00007FFE00001FFC000007F0000>] bdef
/b [33 4 0 29 45 25 45 -4 0
<0FF80000FFFF0000FEAFC000F003E000F000F000F0007800F0003C00F0001C00
 F0001E00F0000E00F0000F00F0000F00F0000700F0000780F0000780F0000780
 F0000780F0000780F0000780F0000780F0000780E8000F00E8000F00EC000F00
 E6003E00E7003E00E1C0F800E1FFF800F07FE000E01F8000F0000000F0000000
 F0000000F0000000F0000000F0000000F0000000F0000000F0000000F0000000
 F0000000F0000000F0000000F0000000F0000000>] bdef
/c [27 3 0 25 30 22 30 -3 0
<007E0003FFC00FFFF01F80FC3E003C3E0008780000780000780000F00000F000
 00F00000F00000F00000F00000F00000F00000F00000F0000070000078000078
 00003800003C00001E00000F000007C01003FAB800FFF8001FE0>] bdef
/d [33 3 0 28 45 25 45 -3 0
<00FC078003FF07800FFFC3800F81C3803E0073803E00338078001B8078000B80
 78000B80F0000780F0000780F0000780F0000780F0000780F0000780F0000780
 F0000780700007807800078078000780380007803C0007801C0007801E000780
 0F0007800780078003E0078001FABF80007FFF80000FFF800000078000000780
 0000078000000780000007800000078000000780000007800000078000000780
 0000078000000780000007800000078000000780>] bdef
/e [29 3 0 26 30 23 30 -3 0
<017E0007FFC01FFFF01F80FC3E003E3E000C780000780000780000F00000F000
 00F00000F00000F00000F00000F00000FFFFFEFFFFFE71554E78001E78000E3C
 001E3C000C3C001C0F001C0F003803C07803F5F000FFE0001F80>] bdef
/g [29 2 -15 27 30 25 45 -2 15
<01FE00000FFFC0003F57F0007C00F80078003C00F0001E00E0001E00E0000F00
 E0000F00E0000F00E0000F0070001F0070001E0038003E001C00FC000603FC00
 019FF00003FFC0001FFE00007FE00000FC000000F0000000F000000070000000
 1C0000000700000000FE000003FF80000F83E0000E00E0001E00F0001C007000
 3C0078003C007800380038003C007800380038003C0078003C0078001C007000
 1E00F0000E00E0000F83C58003FFFF8000FE1280>] bdef
/i [15 5 0 9 40 4 40 -5 0
<F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F00000
 00000000F0F0F0F0>] bdef
/j [15 -3 -15 9 40 12 55 3 15
<FC00FF00AF8003C001E001E000F000E000F000F000F000F000F000F000F000F0
 00F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F0
 00F000F000F000F000F000F000F000F000F000F000F000F000F0000000000000
 00000000000000F000F000F000F0>] bdef
/l [15 5 0 9 45 4 45 -5 0
<F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0
 F0F0F0F0F0F0F0F0F0F0F0F0F0>] bdef
/n [33 5 0 27 30 22 30 -5 0
<F0003CF0003CF0003CF0003CF0003CF0003CF0003CF0003CF0003CF0003CF000
 3CF0003CF0003CF0003CF0003CF0003CF0003CF0003CF0003CF0003CF0003CF0
 003CE8003CEC003CE6003CE70078E1C0F8E1FFF0F07FE0F01F80>] bdef
/o [34 3 0 30 30 27 30 -3 0
<005F400001FFF00003EAF8000F803E001E000F001E000F003C000780780003C0
 780003C0780003C0F00001E0F00001E0F00001E0F00001E0F00001E0F00001E0
 F00001E0F00001E0F00001E0F00001E0780003C0780003C0780003C03C000780
 1E000F001E000F000F803E0003EAF80001FFF000005F4000>] bdef
/p [33 4 -15 29 30 25 45 -4 15
<F0000000F0000000F0000000F0000000F0000000F0000000F0000000F0000000
 F0000000F0000000F0000000F0000000F0000000F0000000F0000000FFF80000
 FFFF0000FEAFC000F003E000F000F000F0007800F0003C00F0001C00F0001E00
 F0000E00F0000F00F0000F00F0000700F0000780F0000780F0000780F0000780
 F0000780F0000780F0000780F0000780E8000F00E8000F00EC000F00E6003E00
 E7003E00E1C0F800E1FFF800F07FE000F01F8000>] bdef
/r [19 5 0 20 30 15 30 -5 0
<F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000F000
 F000F000F000F000F000E800E800EC00E600E780E3F4E1FCF0FEF03E>] bdef
/s [24 2 0 20 30 18 30 -2 0
<0FD000FFFC007D7F00600F800007800003C00003C00003C00003C00003C00007
 C00007C0001F80007F8001FF0007FC001FF0003FC0003F00007C00007C000078
 00007800007800007800003C00003E01801FAF8007FFC0017C00>] bdef
/t [19 0 0 19 39 19 39 0 0
<00FE0003FF8003F7E007C1C00780400780000780000780000780000780000780
 0007800007800007800007800007800007800007800007800007800007800007
 8000078000078000078000078000078000FFFFC0FFFFC0FFFFC0078000078000
 078000078000078000078000078000078000078000>] bdef
/u [33 5 0 27 30 22 30 -5 0
<07E03C1FF83C3FFE1C7C0E1C78079CF0019CF000DCF0005CF0003CF0003CF000
 3CF0003CF0003CF0003CF0003CF0003CF0003CF0003CF0003CF0003CF0003CF0
 003CF0003CF0003CF0003CF0003CF0003CF0003CF0003CF0003C>] bdef
  end

/BuildGlyph {GlobalBuildGlyph} bdef
/BuildChar {GlobalBuildChar} bdef

/imageMaskMatrix [1 0 0 1 0 0] bdef

currentdict

end

/Syntax16.Scn.Fnt exch definefont pop

% Conversion of the Oberon font Syntax12m.Scn.Fnt
% abstraction: 0, family: S, variant: 77
% height: 50

9 dict begin

/FontType 3 def
/FontMatrix [ 72 300 div  .24 div 0 0 72 300 div  .24 div 0 0] def
/FontBBox [-2 -12 47 37] def

/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding OberonEncoding OberonXEncoding OberonYEncoding /Encoding exch def

/CharData 121 dict def
CharData begin
/.notdef [0 0 0 0 0 1 1 0 0
<>] bdef
/space [11 0 0 0 0 1 1 0 0
<>] bdef
/comma [14 4 -7 10 6 6 13 -4 7
<40C0E0E0E0F0F0F0F8F8FCFCA8>] bdef
/minus [27 2 9 26 13 24 4 -2 -9
<AAAAABFFFFFFFFFFFFFFFFFF>] bdef
/period [14 4 0 10 6 6 6 -4 0
<FCF8FCF8FCA8>] bdef
/zero [25 1 -1 25 31 24 32 -1 1
<00000001FF0007FFC00FFFE01FD7F01F01F83E00F87E00FC7C007C7C007CFC00
 7EFC003EF8007EF8003EF8007EF8003EF8007EF8003EF8007EF8003EFC007EFC
 003E7C007C7C007C7C007C3E00F83F01F81F83F00FFFF00FFFC003FF8000FC00
 >] bdef
/one [25 2 0 18 31 16 31 -2 0
<007E003E007E003E007E003E007E003E007E003E007E003E007E003E007E003E
 007E003E207E303EF87E7C3E3E3E1F3E0FBE07FE03FE01FE00FE007E0030>] bdef
/two [25 2 0 23 31 21 31 -2 0
<7FFFF07FFFF07FFFF0FFFFF03C00003F00000F800007C00003E00001F00000F8
 00007C00007E00001F00001F80000F800007C00007C00007E00003E00003E000
 03E00003E00007E00007E02007C0781FC0FFFF803FFF801FFE0003F000>] bdef
/three [25 2 -1 22 31 20 32 -2 1
<0000000FF8007FFE007FFF807D7FC0200FC00007E00007E00003E00003E00003
 E00003E00007E0000FC0003F800FFF0007F8000FFE0005FF00000FC00007C000
 07E00003E00003E00003E00007E00007E0300FC03FFFC0FFFF801FFE0003F000
 >] bdef
/four [25 0 0 25 31 25 31 0 0
<0003E0000003E0000003E0000003E0000003E0000003E0000003E0000003E000
 0003E0007FFFFF007FFFFF80FFFFFF00FFFFFF80F803E0007C03E0003E03E000
 1F03E0001F03E0000F83E00007C3E00003E3E00003E3E00001F3E00000FBE000
 00FBE000007FE000003FE000001FE000001FE000000FE00000054000>] bdef
/five [25 2 -1 24 31 22 32 -2 1
<0000001FF8007FFE003FFF801EFFC0100FE00003F00001F00001F80000F80000
 F80000FC0000F80000FC1001F87801F87C03F07F1FF03FFFE03FFFC03CFF003E
 10003E00001E00001F00001F00001F00001F00000FFFF00FFFF00FFFF00FFFF0
 >] bdef
/six [25 2 -1 25 31 23 32 -2 1
<00000001FE0007FFC00FFFE01FEFF01F81F83F00FC3E007C7E007C7C007C7C00
 7E7C007CFE007C7F00FCFF80FC7FE7F87DFFF07CFFE07C3F807E00003E00003E
 00001F00001F80000F800007C00007F00001FC0000FFF8007FF8001FF80002F8
 >] bdef
/seven [25 1 -1 23 31 22 32 -1 1
<0200000E00003F00001F00001F80000F800007C00007E00003E00003F00001F0
 0001F80000F80000FC00007C00007E00003E00003F00001F00000F80000FC000
 07C00007E00003E00003F00001F00001F80000F8FFFFFCFFFFF8FFFFF8FFFFF0
 >] bdef
/eight [25 3 -1 25 31 22 32 -3 1
<00000007FE001FFF803FFFE07F07F07C01F07C01F8F800F87800F8F800F87800
 F87C01F83E03F03F07F00FDFE007FFC001FF0007FE001FFF803F8FE03F03F07E
 01F07C00F87C00F87C00F87C00F87E00F83E03F03FDFF00FFFE007FF80017E00
 >] bdef
/nine [25 2 -1 25 31 23 32 -2 1
<0000003FC0003FF0003FFC0005FF00003F80000FC00007E00003E00001F00001
 F80000F80000F801E0FC07FC7C1FFF7C1FFF7C3F07FE7E01FC7C00FE7C00FCFC
 007C7C007CFC007C7C00FC7C00F83E01F83F87F01FFFE00FFFE003FF8000BC00
 >] bdef
/A [27 0 0 29 31 29 31 0 0
<F80001F8F80003F07C0003F07C0003E03C0007E03E0007E03E0007C01F000FC0
 1F000FC01F000F800FFFFF800FFFFF8007FFFF0007FFFF0007C03E0003C03E00
 03E07E0001E07C0001E07C0001F0FC0000F0F80000F0F8000079F8000079F000
 0079F000003DF000003FE000003FE000001FC000001FC000000FC000>] bdef
/B [27 5 0 26 31 21 31 -5 0
<ABF400FFFF00FFFFC0FFFFE0F807F0FC03F0F801F8FC01F0F801F8FC01F0F801
 F8FC01F0F803F0FC07E0FFFFC0FFFE00FFFF00FEAFC0F807C0FC03E0F801E0FC
 01F0F801F0FC01F0F801F0FC03F0F807E0FFFFE0FFFFC0FFFF80ABFA00>] bdef
/C [27 3 0 26 31 23 31 -3 0
<007FD001FFFE03FFFE0FFFFC0FE01C1FC0003F00003F00007E00007E00007E00
 00FC00007C0000FC00007C0000FC00007C0000FC00007C00007C00007E00003E
 00003E00001F00001F80000FC00007F01C03FFFC01FFFE007FFE000FD0>] bdef
/D [34 5 -1 32 31 27 32 -5 1
<00000000FFFD0000FFFFE000FFFFF800FFFFFC00FC01FE00F8007F00FC003F80
 F8001F80FC000FC0F8000FC0FC0007C0F80007C0FC0007E0F80007E0FC0007E0
 F80007C0FC0007E0F80007C0FC0007C0F80007C0FC000FC0F8000FC0FC000F80
 F8001F80FC003F00F8007F00F805FE00FFFFF800FFFFF000FFFFC000BFC40000
 >] bdef
/E [25 5 0 23 31 18 31 -5 0
<FFFFC0FFFF80FFFFC0FFFF80FC0000F80000FC0000F80000FC0000F80000FC00
 00F80000FC0000FC0000FFFF80FFFF80FFFF80FFFF80F80000FC0000F80000FC
 0000F80000FC0000F80000FC0000FC0000FFFFC0FFFF80FFFFC0FFFF80>] bdef
/G [30 3 0 28 31 25 31 -3 0
<007FD00001FFFD0003FFFF800FFFFF800FE01F801FC00F803F001F803F000F80
 7E001F807E000F807E001F80FC000F807C001F80FC000F807C001F80FC001F80
 7C000000FC0000007C0000007C0000007E0000003E0000003E0000001F000000
 1F8000000FC0000007F01C0003FFFC0001FFFE00007FFE00000FD000>] bdef
/I [14 5 0 11 31 6 31 -5 0
<FCF8FCF8FCF8FCF8FCF8FCF8FCF8FCF8FCF8FCF8FCF8FCF8FCF8FCF8FCF8FC>] bdef
/L [21 5 0 22 31 17 31 -5 0
<FFFF80FFFF80FFFF80FFFF80FC0000F80000FC0000F80000FC0000F80000FC00
 00F80000FC0000F80000FC0000F80000FC0000F80000FC0000F80000FC0000F8
 0000FC0000F80000FC0000F80000FC0000F80000FC0000F80000FC0000>] bdef
/M [44 2 0 44 31 42 31 -2 0
<F8003F000FC0F8007F000FC078007F000F807C007F800F807C00FF801F803C00
 FFC01F803C00FBC01F003E01FBC01F003E01F3E01F001E01FBE03F001E03F1E0
 3F001F03F1F03E001F03E1F03E000F03E0F03E000F07E0F87E000F87C0F87C00
 0F87C0787C00078FC07C7C00078F807CFC0007CF803CFC0007DF803EF80003DF
 803EF80003DF001EF80003FF001FF80003FF001FF00001FE000FF00001FE000F
 F00001FE000FF00001FC0007F00000FC0007E00000FC0007E000>] bdef
/N [34 5 0 31 31 26 31 -5 0
<F0001FC0F8003F80F0003FC0F8007F80F0007FC0F800FF80F001FFC0F801F780
 F003F7C0F807E780F007E7C0F80FC780F01FC7C0F81F8780F03F07C0F83F0780
 F07E07C0F8FC0780F0FC07C0F9F80780F3F007C0F3F00780F7E007C0F7E00780
 FFC007C0FF800780FF8007C0FF000780FE0007C0FE000780FC0007C0>] bdef
/P [25 5 0 26 31 21 31 -5 0
<F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F800
 00F80000F80000FFF400FFFF00FFFFC0FFFFE0F80FE0F803F0F803F0F801F8F8
 01F0F801F8F801F0F803F8F803F0F80FF0FFFFE0FFFFE0FFFF80AFFA00>] bdef
/S [24 3 0 23 31 20 31 -3 0
<17F000FFFE00FFFF00FFFFC0741FC04007E00003E00003F00003E00003F00007
 F0000FE0003FE000FFC001FF8007FF001FFC003FF0007FC0007F0000FE0000FC
 00007C0000FC00007C00007E00203F82E03FFFF00FFFF007FFF000FE80>] bdef
/T [20 -1 0 23 31 24 31 1 0
<007E00007C00007E00007C00007E00007C00007E00007C00007E00007C00007E
 00007C00007E00007C00007E00007C00007E00007C00007E00007C00007E0000
 7C00007E00007C00007E00007C00007E00FFFFFFFFFFFFFFFFFFFFFFFF>] bdef
/U [32 5 0 29 31 24 31 -5 0
<00FE8007FFE01FFFF01FFFFC3F80FC3F003E7E003E7E001FFC001E7C000FFC00
 1F7C000FFC001F7C000FFC001F7C000FFC001F7C000FFC001F7C000FFC001F7C
 000FFC001F7C000FFC001F7C000FFC001F7C000FFC001F7C000FFC001F>] bdef
/V [27 0 0 29 31 29 31 0 0
<001F8000001FC000001FC000003FE000003FE000007DE000007CF000007CF000
 00FCF00000F8780000F8780001F87C0001F03C0001F03C0003F03E0003E01E00
 03E01F0007E01F0007C00F000FC00F800FC00F800F8007C01F8007C01F8007C0
 1F0003E03F0003E03F0001E03E0001F07E0001F07E0000F8FC0000F8>] bdef
/a [22 2 0 21 23 19 23 -2 0
<1F07E07FCFE07FEFE0FFFF80FC3F80F81F80F80F80F80F80780F807C0F803F0F
 801FFF8007FF8000FF80000F80000F80100F80300F807C1F803F7F001FFF0007
 FE0001F800>] bdef
/b [26 4 0 25 34 21 34 -4 0
<AFD000FFFC00FFFE00FD7F80F80FC0F807C0F807E0F803E0F801F0F801F0F801
 F0F801F0F801F8F801F0F801F8F801F0FC03F0FF03F0FFDFE0FBFFE0F9FFC0F8
 7F80F81A00F80000F80000F80000F80000F80000F80000F80000F80000F80000
 F80000F80000>] bdef
/c [20 3 0 20 23 17 23 -3 0
<0FF0001FFC003FFF007FBF007E0700FC0200FC0000F80000F80000F80000F800
 00F80000F80000F80000F800007C00007C00007E00003F82001FFF000FFF0003
 FF8000B400>] bdef
/d [26 2 0 23 34 21 34 -2 0
<02C0F80FF0F81FFCF83FFEF83FDFF87E07F87E01F87C00F8FC00F87C00F8FC00
 F87C00F87C00F87C00F87C00F83E00F83F00F81F00F81F80F80FF5F803FFF801
 FFF8005FF80000F80000F80000F80000F80000F80000F80000F80000F80000F8
 0000F80000F8>] bdef
/e [24 3 0 23 23 20 23 -3 0
<03FC000FFF001FFFC03FDFE03F03C07E00807C0000FC0000F80000FC0000FAAA
 A0FFFFF0FFFFF0FFFFF07C01F07C01E07C01F03E03E03E03E01FAFC00FFFC007
 FF0001FC00>] bdef
/f [13 1 0 15 34 14 34 -1 0
<1F001F001F001F001F001F001F001F001F001F001F001F001F001F001F001F00
 1F001F001F00FFFCFFFCFFFCBF541F001F001F001F001F001F000F800FFC07FC
 03FC00FC>] bdef
/g [23 2 -12 24 23 22 35 -2 12
<01400017FA003FFF807F5FC0FC07E0F803E0F801F0F801F0F801F07801F07C03
 F01E0FE0077FE00FFFC03FFF00FFF800FF8000F800007800001E000007E8000F
 FE003FFF803F0F807E07C07C03E07C03E07C03E07C03E07C03C03E07C03F0FFC
 0FFFFC07FFFC00FC00>] bdef
/i [13 4 0 9 32 5 32 -4 0
<F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F800000000F8F8F8F8F8
 >] bdef
/l [13 4 0 9 34 5 34 -4 0
<F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8
 F8F8>] bdef
/m [40 4 0 37 23 33 23 -4 0
<F803E00F80F803E00F80F803E00F80F803E00F80F803E00F80F803E00F80F803
 E00F80F803E00F80F803E00F80F803E00F80F803E00F80F803E00F80F803E00F
 80F803E00F80F803E00F80F803E00F80FC03F00F80FF07FC1F80FFAFDEBF80FB
 FFCFFF00F9FFC7FF00F8FF83FE00F81F007C00>] bdef
/n [26 4 0 23 23 19 23 -4 0
<F803E0F803E0F803E0F803E0F803E0F803E0F803E0F803E0F803E0F803E0F803
 E0F803E0F803E0F803E0F803E0F803E0FC03E0FF07E0FFAFE0FBFFC0F9FFC0F8
 FF80F81D00>] bdef
/o [25 3 0 24 23 21 23 -3 0
<01FC0007FF000FFF803FFFE03F07E07E03F07C01F0FC01F8F800F8F800F8F800
 F8F800F8F800F8F800F8F800F8FC01F87C01F07E03F03F07E03FFFE00FFF8007
 FF0001FC00>] bdef
/p [26 4 -11 25 23 21 34 -4 11
<F80000F80000F80000F80000F80000F80000F80000F80000F80000F80000F800
 00FFD000FFFC00FFFE00FD7F80F80FC0F807C0F807E0F803E0F801F0F801F0F8
 01F0F801F0F801F8F801F0F801F8F801F0FC03F0FF03F0FFDFE0FBFFE0F9FFC0
 F87F80F81E00>] bdef
/r [15 4 0 16 23 12 23 -4 0
<F800F800F800F800F800F800F800F800F800F800F800F800F800F800F800FC00
 FF00FFF0FBF0FBF0F9F0F9F0F870>] bdef
/s [18 1 0 17 23 16 23 -1 0
<1FD07FFCFFFE7ABE701F001F001F001F003F00FE07FE1FFC3FF03F807E007C00
 7C007C003E063F5E1FFF0FFE03F8>] bdef
/t [16 1 0 16 30 15 30 -1 0
<03F00FFC0FFE1FFE1F8C1F001F001F001F001F001F001F001F001F001F001F00
 1F001F001F00FFFEFFFEFFFEBF561F001F001F001F001F001F001F00>] bdef
/u [26 4 0 23 23 19 23 -4 0
<1703E03FE3E07FF3E07FFBE0FEBFE0FC1FE0F807E0F803E0F803E0F803E0F803
 E0F803E0F803E0F803E0F803E0F803E0F803E0F803E0F803E0F803E0F803E0F8
 03E0F803E0>] bdef
/x [21 -1 0 22 23 23 23 1 0
<FC007E7E00FC3F01FC1F01F80F83F00FC7F007C7E003EFC001EFC001FF8000FF
 00007F00007E0000FF0001FF8001F7C003F7C007E3E007E1F00FC1F81F80F81F
 807C3F007E>] bdef
/y [21 1 -11 22 23 21 34 -1 11
<F80000FE0000FF0000FF800007C00003C00003E00001E00001F00001F00000F0
 0001F80001F80001FC0003FC0003FC0003DE0007DE0007DE0007CF000F8F000F
 8F801F8F801F07801F07C01F07C03F03E03E03E07E03E07E01F07C01F0FC01F0
 FC00F8FC00F8>] bdef
  end

/BuildGlyph {GlobalBuildGlyph} bdef
/BuildChar {GlobalBuildChar} bdef

/imageMaskMatrix [1 0 0 1 0 0] bdef

currentdict

end

/Syntax12m.Scn.Fnt exch definefont pop

% Conversion of the Oberon font Syntax12i.Scn.Fnt
% abstraction: 0, family: S, variant: 73
% height: 50

9 dict begin

/FontType 3 def
/FontMatrix [ 72 300 div  .24 div 0 0 72 300 div  .24 div 0 0] def
/FontBBox [-7 -12 45 36] def

/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding OberonEncoding OberonXEncoding OberonYEncoding /Encoding exch def

/CharData 121 dict def
CharData begin
/.notdef [0 0 0 0 0 1 1 0 0
<>] bdef
/space [10 0 0 0 0 1 1 0 0
<>] bdef
/plus [25 2 0 23 22 21 22 -2 0
<01800001C00001800000C00000C00000C00000E00000600000E000006000FFFF
 F8FFFFF8003000003800003000003800001800001800001800000C00001C0000
 0C00>] bdef
/comma [11 1 -6 6 4 5 10 -1 6
<8080C0C0E06070707878>] bdef
/minus [25 2 11 23 13 21 2 -2 -11
<FFFFF8FFFFF8>] bdef
/period [11 1 0 6 4 5 4 -1 0
<F0F07878>] bdef
/one [24 3 0 18 30 15 30 -3 0
<0380038001C0038001C001C001C000E000C000E000E000E00070007000700070
 007000380038003800384018F01C381C1E1C078C01CC00E6003E000E>] bdef
/four [24 1 0 23 30 22 30 -1 0
<000E00000E00000E00000E00000E000007000007000007000007007FFFFC7FFF
 FCC003806003803803801801800E01800701C00381C00181C000E0C00060C000
 30E00038E0000C60000E600006600003300001B00000B0000070>] bdef
/five [24 4 0 24 30 20 30 -4 0
<FF0000FFE00000F800003C00000E000007000007000003800003800001C00001
 C00001C00001C00001C00003C0000380700780780F0067FE0032F80030000038
 00001C00001C00000C00000E00000E000006000007FFF007FFF0>] bdef
/colon [11 3 0 12 21 9 21 -3 0
<F000F00078007800000000000000000000000000000000000000000000000000
 00000F000F0007800780>] bdef
/semicolon [11 3 -6 12 21 9 27 -3 6
<80008000C000C000E00060007000700078007800000000000000000000000000
 00000000000000000000000000000F000F0007800780>] bdef
/equal [25 2 8 24 16 22 8 -2 -8
<FFFFF8FFFFF80000000000000000000000007FFFFC7FFFFC>] bdef
/A [23 -3 -1 21 30 24 31 3 1
<200000E0000760000770000730000738000718000E1C00070E000E06000E0700
 0E03000E03FFFC01FFFE01800C00E01C00E01C00701C00301C00381800183C00
 1C18000C180006380006380003380003300001300001B00000B00000F0>] bdef
/B [23 2 0 22 30 20 30 -2 0
<FF8000FFF000E07C00E00F00E007006003807003807001C07001C07001C03001
 C03803C03803803807803FFE001FF000181E001C07801C01C01C00E00C00E00E
 00700E00700E00700E00700600700700F00701E007FFC007FE80>] bdef
/D [29 2 0 29 30 27 30 -2 0
<FFE00000FFFE0000E00F80007001E0007000F0007000380070001C0070000E00
 38000E00380007003800038038000380380003801C0001C01C0003C01C0001C0
 1C0001E00E0001C00E0001C00E0001E00E0001C00E0001C0070003C007000380
 0700078007000F0007001E0003807C0003FFF00003FFC000>] bdef
/E [21 1 0 22 30 21 30 -1 0
<FFFFC07FFFC07000007000007000003800003800003800003800003800001C00
 001C00001C00001C00000FFFE00FFFE00E00000E00000E000007000007000007
 000007000007000003800003800003800003800003FFF803FFF8>] bdef
/I [11 1 0 12 30 11 30 -1 0
<F00070007000700038003800380038001C001C001C001C001C000E000E000E00
 0E000E000700070007000700038003800380038001C001C001C001E0>] bdef
/L [17 1 0 18 30 17 30 -1 0
<FFFF807FFF807000007000003800003800003800003800001C00001C00001C00
 001C00001C00000E00000E00000E00000E00000E000007000007000007000007
 000003800003800003800003800001C00001C00001C00001E000>] bdef
/N [30 2 0 30 30 28 30 -2 0
<E0001C00E0003C00E00034006000760070007600700076007000E6003000E700
 3001C7003801C3003803C300380383001807838018070380180703801C0E0180
 1C0E01801C1C01800C1C01C00C3C01C00C3801C00E3800C00E7000C0067000E0
 066000E006E000E006C0006002C000700380007003800070>] bdef
/R [24 1 0 22 30 21 30 -1 0
<F000207000787000707000F03800E03801E03801C03801C01C03801C07801C07
 001C07001C0E000E1E000FF8000FF8000E0F000E03C00700E007007007007007
 003803803803803803803803803801C07001C0F001FFE001FF40>] bdef
/S [19 -1 0 20 30 21 30 1 0
<1FE000FFF800E01E000006000007000003800003800003800003800003800007
 80000700000F00001E00003C0000F80001E00003C0000780000700000F00000E
 00000E00000E00000E000007000003000003C03800FFF8003FC0>] bdef
/T [20 2 0 24 30 22 30 -2 0
<1E00000E00000E00000E00000700000700000700000700000380000380000380
 0003800003800001C00001C00001C00001C00001C00000E00000E00000E00000
 E000007000007000007000007000003800003800FFFFFCFFFFFC>] bdef
/V [22 3 0 27 31 24 31 -3 0
<0F00000D00000D80000C80000CC0001CC0001C60001C70001830001838003C18
 00181C00380C003806003807003803003003807001803001C07000C07000E070
 0060700070E00038700018E0001CE0000CE0000EE00006E00007000004>] bdef
/W [41 4 0 45 30 41 30 -4 0
<3C0003C000003C0003C000003200032000003300033000003300033000003180
 0318000071C00318000030C0031C000070E0070C00007060030E000070700706
 0000703007070000703807030000701807038000701C07018000F00C0701C000
 700E0700E000E0060700E000E00707007000E00307007000E00387003800E001
 87003800E00187001C00E000C6001C00E000C7000E00E00066000E00E0006600
 0700E00026000700E0001E000380E0001E000300>] bdef
/bracketleft [16 2 -5 18 33 16 38 -2 5
<AB00FF00E0006000E00060006000700030003000300038003000180018001800
 1C001C000C000C000C000E000E00060006000600070003000700030003000380
 01800180018001C000D500FF>] bdef
/bracketright [16 0 -5 16 33 16 38 0 5
<FF00AB00038001800180018001C000C000C000E000C000E00060006000600070
 007000300030003000380038001800180018000C001C000C000C000C000E0006
 000600070006000700FF00D5>] bdef
/a [20 1 0 19 22 18 22 -1 0
<3E0F007F8FC0F0CC40E02400E01400E00E00E00C00700E00700E003806000E06
 0007C700007F000007000003000003800003800003800C03800F038003EF0000
 FF00>] bdef
/b [22 1 0 21 34 20 34 -1 0
<FE000077C00070F000703800701E003807003007003803803801C03800E01800
 E01C00E01C00701C00701C00700E00700D00700C80700CC0700670E0063FE007
 0FC007000007000003000003800003800003800003800001800001C00001C000
 01C00001C000>] bdef
/c [17 1 0 18 22 17 22 -1 0
<1780003FE000783800F01C00E00800E00000E00000E00000E00000E00000E000
 007000007000007000003800003800001C00000E000007000003C00000FA8000
 3F80>] bdef
/d [22 1 0 23 34 22 34 -1 0
<3F06007FC60070E600E03300E01300E00B00E00700E00380E00380E003807003
 807001807001C03801C01C01C00E01C00E00C00780E001C0E000F0E0003E6000
 07F000007000007000007000007000003800003800003800003800003800001C
 00001C00001C>] bdef
/e [18 1 0 19 22 18 22 -1 0
<1F80007FE000783800F01C00E00800E00000E00000E00000E00000E00000E000
 007540007FF800703E003807003803801C01800E01C00601800381C001EB8000
 5F00>] bdef
/f [12 -7 -12 19 34 26 46 7 12
<F8000000FE000000070000000380000001C0000001C0000000E0000000E00000
 00E0000000700000007000000070000000700000007000000038000000380000
 003800000038000000380000001C0000001C0000001C0000001C0000001C0000
 000E0000000E0000000E0000000E0000000E0000000700000007000000070000
 007FFF80007FFF800003800000038000000180000001C0000001C0000001C000
 0000E0000000E000000070000000380000001FC0000007C0>] bdef
/g [20 -2 -12 22 22 24 34 2 12
<0FC0003FF800381E00600700E00380600380E001C06001C06001C03001C03803
 C00C0780031F8000FE0007F0000FC0001E00001C00000C000007000000FE0001
 D7800381C00700E00700E006007007007007007007003003807003807001C0E0
 00F587003FFF>] bdef
/h [23 2 0 21 34 19 34 -2 0
<E00700E00700E00700E007007003007003807003807003803803803801803801
 C03801C01801C01C01C01C00C01A00E01900E00D80E00CC0E00C70E00E1FE00E
 0FC0060000070000070000070000030000038000038000038000038000018000
 01C00001C000>] bdef
/i [11 2 0 12 30 10 30 -2 0
<E000E000E000E0007000700070007000700038003800380038001C001C001C00
 1C001C000E000E000E000E00000000000000000000000780038003C0>] bdef
/k [22 2 -1 23 34 21 35 -2 1
<000200E00380E00380E00700E00F00700E00701C00703C0070380038700038E0
 0038E00039C00018E0001C70001C38001C1C001C0F001C07000E01C00E01E00E
 00700E0038060010070000070000070000038000038000038000038000038000
 01C00001C00001C000>] bdef
/l [10 2 0 12 34 10 34 -2 0
<E000E000E000E0007000700070007000380038003800380018001C001C001C00
 1C001C000E000E000E000E0006000700070007000380038003800380038001C0
 01C001C0>] bdef
/m [36 2 0 34 22 32 22 -2 0
<E0070038E0070038E0070038E0070038700300187003801C7003801C7003801C
 3803801C3801800C3801C00E3801C00E1801C00E1C01C00E1C00E0061A00D007
 1900C8070D80CC070CC0E6070C70E3870E1FE0FF0E0FC07E>] bdef
/n [23 2 0 21 22 19 22 -2 0
<E00700E00700E00700E007007003007003807003807003803803803801803801
 C03801C01801C01C01C01C00C01A00E01900E00D80E00CC0E00C70E00E1FE00E
 0FC0>] bdef
/o [23 2 0 21 22 19 22 -2 0
<1FC0003EF000703C00700E00E00700E00300E00380E001C0C001C0E000C0E000
 E0E000E06000E07000607000E03800E03800E01C00E00E01C00701C001EF8000
 7F00>] bdef
/p [22 -1 -12 21 22 22 34 1 12
<E00000E00000E000007000007000007000007000007000003800003800003800
 003800003F800019F0001C3C001C0E001C07800C01C00E01C00E00E00E00700E
 003806003807003807001C07001C07001C03801C03401C03201C03301C019C38
 018FF80183F0>] bdef
/r [15 2 0 18 22 16 22 -2 0
<E000E000E00070007000700070007000380038003800380038001C001C001E00
 1D000D800CE00C7F0E3F0E0F>] bdef
/s [15 -1 0 16 22 17 22 1 0
<FF8000FFE000007800003800001C00001C00001C00001C0000380000780001F0
 0007C0000F00000E00001C00001C00001C00001C00000E00000F000003FF8000
 FF80>] bdef
/t [15 2 0 17 30 15 30 -2 0
<3F007FC070E07038701C70087000380038003800380038001C001C001C001C00
 0E000E000E000E00FFFEFFFE070007000700070003800380038003C0>] bdef
/u [23 2 0 21 22 19 22 -2 0
<7E0E00FF0E00E1C600E06600E03600E01300E00B006007007007007003007003
 807003803003803803803801C03801C03801C01801C01C00E01C00E01C00E01C
 00E0>] bdef
/v [19 1 0 20 22 19 22 -1 0
<0E00000E00000D00000D80001C80001CC0001C60001C60001830001C30003818
 00381C00380C00380E003806003007007803003001807001C07000C07000E0F0
 0040>] bdef
/w [35 2 0 36 22 34 22 -2 0
<1C001C00001C001C00001A001A00001B001B00003900390000198019800039C0
 39C00038C038C00030E030E00038603860007070307000303030380070187018
 00701C301C00700C700C00700E700E007006600700E0027007006003600380E0
 01600180E000E001C0E000E00080>] bdef
/x [19 -1 0 21 22 22 22 1 0
<400300E003C07007803807001C07000E0E00070E00039C00019C0000D8000038
 00007000006C0000E60000E70001C38001C1C00380E00380700780380F001C03
 0008>] bdef
/y [19 -7 -12 20 22 27 34 7 12
<E8000000FE0000000780000001C0000000C0000000E000000070000000300000
 0038000000180000001C0000000C0000000E0000000E0000000D0000000D8000
 001C8000001CC000001C6000001C600000183000001C30000038180000381C00
 00380C0000380E0000380600003007000078030000300180007001C0007000C0
 007000E000F00040>] bdef
/z [18 1 0 18 22 17 22 -1 0
<7FFE00CFFE00C000006000003800003C00001E00000E000007000007800003C0
 0001C00000E000007000007800003800001C00000E000007000001801FF9801F
 FF00>] bdef
  end

/BuildGlyph {GlobalBuildGlyph} bdef
/BuildChar {GlobalBuildChar} bdef

/imageMaskMatrix [1 0 0 1 0 0] bdef

currentdict

end

/Syntax12i.Scn.Fnt exch definefont pop

% Conversion of the Oberon font Syntax10m.Scn.Fnt
% abstraction: 0, family: S, variant: 77
% height: 42

9 dict begin

/FontType 3 def
/FontMatrix [ 72 300 div  .24 div 0 0 72 300 div  .24 div 0 0] def
/FontBBox [-2 -10 41 31] def

/Encoding 256 array def
0 1 255 {Encoding exch /.notdef put} for
Encoding OberonEncoding OberonXEncoding OberonYEncoding /Encoding exch def

/CharData 121 dict def
CharData begin
/.notdef [0 0 0 0 0 1 1 0 0
<>] bdef
/space [9 0 0 0 0 1 1 0 0
<>] bdef
/quotedbl [19 4 16 16 26 12 10 -4 -16
<8100C180C180E1C0E1C0E1C0F1E0F1E0F1E0A140>] bdef
/period [11 4 0 9 5 5 5 -4 0
<F8F0F8F0A8>] bdef
/bracketleft [15 3 -7 11 28 8 35 -3 7
<00FFFEE0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0
 FFFE00>] bdef
  end

/BuildGlyph {GlobalBuildGlyph} bdef
/BuildChar {GlobalBuildChar} bdef

/imageMaskMatrix [1 0 0 1 0 0] bdef

currentdict

end

/Syntax10m.Scn.Fnt exch definefont pop


OberonInit
save

%%EndProlog

%%Page: 0 1
2105 3224 m (Syntax10.Scn.Fnt) f (0) s
177 3119 m (Syntax12.Scn.Fnt) f (Institut f\205r Computersysteme) s
1558 3119 m (N. Wirth, 15.4.94 / 5.11.96) s
177 3059 m (ETH Z\205rich) s
475 2918 m (Syntax16.Scn.Fnt) f (Lola: An Object-Oriented Logic Description Language) s
177 2797 m (Syntax12.Scn.Fnt) f (Lola) s
265 2797 m (is) s
305 2797 m (a) s
338 2797 m (notation) s
508 2797 m (\(language\)) s
718 2797 m (for) s
782 2797 m (specifying) s
974 2797 m (synchronous,) s
1230 2797 m (digital) s
1355 2797 m (circuits) s
1498 2797 m (\(logic\).) s
1639 2797 m (In) s
1688 2797 m (many) s
1803 2797 m (ways) s
1903 2797 m (it) s
1939 2797 m (resembles) s
177 2737 m (a) s
218 2737 m (procedural) s
436 2737 m (programming) s
710 2737 m (language.) s
906 2737 m (However,) s
1098 2737 m (Lola) s
1193 2737 m (texts) s
1298 2737 m (describe) s
1469 2737 m (static) s
1584 2737 m (circuits) s
1734 2737 m (rather) s
1864 2737 m (than) s
1968 2737 m (dynamic) s
177 2677 m (processes.) s
375 2677 m (The) s
455 2677 m (objects) s
597 2677 m (occurring) s
783 2677 m (in) s
831 2677 m (a) s
864 2677 m (description) s
1081 2677 m (are) s
1150 2677 m (variables) s
1321 2677 m (representing) s
1563 2677 m (signals,) s
1708 2677 m (operators) s
1895 2677 m (representing) s
177 2617 m (gates, and composite structures of such objects.) s
177 2497 m (Syntax12m.Scn.Fnt) f (1. Identifiers, Integers, Logical Values, and Comments) s
177 2414 m (Syntax12.Scn.Fnt) f (Identifiers are used to denote constants, variables, and types.) s
259 2331 m (Syntax10.Scn.Fnt) f (identifier =) s
566 2331 m (letter {letter | digit} ["'"].) s
259 2271 m (integer =) s
566 2271 m (digit {digit}.) s
259 2211 m (LogicValue =) s
566 2211 m (" '0" | " '1".) s
177 2128 m (Syntax12.Scn.Fnt) f (Comments) s
397 2128 m (are) s
467 2128 m (sequences) s
670 2128 m (of) s
720 2128 m (characters) s
920 2128 m (enclosed) s
1095 2128 m (by) s
1150 2128 m (the) s
1223 2128 m (brackets) s
1389 2128 m (\(*) s
1444 2128 m (and) s
1526 2128 m (*\),) s
1590 2128 m (and) s
1672 2128 m (they) s
1762 2128 m (may) s
1852 2128 m (occur) s
1966 2128 m (between) s
177 2068 m (any two symbols within a Lola text.) s
177 1948 m (Syntax12m.Scn.Fnt) f (2. Basic and Simple Types) s
177 1865 m (Syntax12.Scn.Fnt) f (Every) s
288 1865 m (variable) s
446 1865 m (in) s
498 1865 m (Lola) s
590 1865 m (has) s
669 1865 m (a) s
706 1865 m (type.) s
809 1865 m (It) s
850 1865 m (is) s
893 1865 m (either) s
1015 1865 m (a) s
1051 1865 m (basic,) s
1168 1865 m (predefined) s
1382 1865 m (type) s
1474 1865 m (or) s
1528 1865 m (a) s
1564 1865 m (structured) s
1768 1865 m (type) s
1860 1865 m (defined) s
2014 1865 m (in) s
2065 1865 m (the) s
177 1805 m (program) s
353 1805 m (text.) s
449 1805 m (The) s
533 1805 m (basic) s
641 1805 m (types) s
751 1805 m (are) s
824 1805 m (denoted) s
993 1805 m (by) s
1051 1805 m (BIT,) s
1136 1805 m (TS,) s
1207 1805 m (or) s
1262 1805 m (OC,) s
1349 1805 m (which) s
1478 1805 m (differ) s
1591 1805 m (only) s
1685 1805 m (in) s
1737 1805 m (their) s
1839 1805 m (rules) s
1944 1805 m (governing) s
177 1745 m (assignment.) s
412 1745 m (\(TS) s
485 1745 m (denotes) s
643 1745 m (a) s
676 1745 m (tri-state) s
841 1745 m (bus,) s
929 1745 m (OC) s
1002 1745 m (an) s
1060 1745 m (open-collector) s
1350 1745 m (bus\).) s
1455 1745 m (Variables) s
1634 1745 m (of) s
1683 1745 m (a) s
1716 1745 m (basic) s
1820 1745 m (type) s
1909 1745 m (have) s
2006 1745 m (a) s
2039 1745 m (logic) s
177 1685 m (value, denoted by '0 or '1. ) s
259 1602 m (Syntax10.Scn.Fnt) f (SimpleType =) s
566 1602 m (BasicType | identifier ["\(" ExpressionList "\)"].) s
259 1542 m (BasicType =) s
566 1542 m ("BIT" | "TS" | "OC".) s
259 1482 m (ExpressionList =) s
566 1482 m (expression {"," expression}.) s
177 1362 m (Syntax12m.Scn.Fnt) f (3. Array types) s
177 1279 m (Syntax12.Scn.Fnt) f (Array) s
293 1279 m (types) s
408 1279 m (consist) s
556 1279 m (of) s
613 1279 m (an) s
679 1279 m (array) s
789 1279 m (of) s
846 1279 m (elements,) s
1045 1279 m (all) s
1108 1279 m (of) s
1165 1279 m (which) s
1298 1279 m (have) s
1403 1279 m (the) s
1483 1279 m (same) s
1601 1279 m (type.) s
1709 1279 m (A) s
1755 1279 m (numeric) s
1930 1279 m (expression) s
177 1219 m (indicates) s
356 1219 m (the) s
432 1219 m (number) s
596 1219 m (of) s
648 1219 m (elements) s
832 1219 m (in) s
883 1219 m (the) s
958 1219 m (array.) s
1074 1219 m (Elements) s
1260 1219 m (are) s
1332 1219 m (identified) s
1522 1219 m (by) s
1579 1219 m (an) s
1640 1219 m (index) s
1756 1219 m (value.) s
1878 1219 m (Indices) s
2022 1219 m (range) s
177 1159 m (from 0 to the array's length minus 1.) s
259 1076 m (Syntax10.Scn.Fnt) f (type =) s
436 1076 m ({ "[" expression "]" } SimpleType.) s
177 956 m (Syntax12m.Scn.Fnt) f (4. Constant Declarations) s
177 873 m (Syntax12.Scn.Fnt) f (Constant declarations serve to introduce identifiers denoting a constant, numeric value.) s
259 790 m (Syntax10.Scn.Fnt) f (ConstDeclaration =) s
601 790 m (identifier ":=" expression ";".) s
177 670 m (Syntax12m.Scn.Fnt) f (5. Variable Declarations) s
177 587 m (Syntax12.Scn.Fnt) f (Variable) s
339 587 m (declarations) s
574 587 m (serve) s
678 587 m (to) s
728 587 m (introduce) s
917 587 m (identifiers) s
1111 587 m (denoting) s
1287 587 m (a) s
1319 587 m (logic) s
1416 587 m (variable) s
1569 587 m (and) s
1650 587 m (to) s
1699 587 m (associate) s
1875 587 m (it) s
1911 587 m (with) s
2005 587 m (a) s
2037 587 m (type.) s
177 527 m (All variables declared in an identifier list have the same type.) s
259 444 m (Syntax10.Scn.Fnt) f (VarDeclaration =) s
601 444 m (IdList ":" type ";".) s
259 384 m (IdList =) s
601 384 m (identifier {"," identifier}.) s
1 p
%%Page: 0 2
2105 3224 m (Syntax10.Scn.Fnt) f (1) s
177 3119 m (Syntax12m.Scn.Fnt) f (6. Expressions) s
177 3036 m (Syntax12.Scn.Fnt) f (Expressions) s
409 3036 m (serve) s
519 3036 m (to) s
575 3036 m (combine) s
756 3036 m (variables) s
933 3036 m (with) s
1034 3036 m (logical) s
1170 3036 m (operators) s
1363 3036 m (to) s
1419 3036 m (define) s
1552 3036 m (new) s
1649 3036 m (values.) s
1791 3036 m (The) s
1876 3036 m (operators) s
2068 3036 m (are) s
177 2976 m (negation,) s
361 2976 m (logical) s
491 2976 m (conjunction) s
725 2976 m (\(and\),) s
849 2976 m (disjunction) s
1067 2976 m (\(or\),) s
1160 2976 m (and) s
1242 2976 m (difference) s
1437 2976 m (\(xor\).) s
1551 2976 m (Operands) s
1743 2976 m (are) s
1811 2976 m (of) s
1859 2976 m (any) s
1934 2976 m (basic) s
2037 2976 m (type.) s
177 2916 m (Elements) s
364 2916 m (of) s
417 2916 m (an) s
479 2916 m (array) s
585 2916 m (are) s
658 2916 m (selected) s
822 2916 m (by) s
880 2916 m (an) s
942 2916 m (index:) s
1070 2916 m (Syntax12i.Scn.Fnt) f (a.5,) s
1151 2916 m (a.i.) s
1220 2916 m (Syntax12.Scn.Fnt) f (If) s
1261 2916 m (the) s
1337 2916 m (index) s
1454 2916 m (is) s
1498 2916 m (an) s
1560 2916 m (expression,) s
1781 2916 m (the) s
1857 2916 m (form) s
1964 2916 m (a[exp]) s
2097 2916 m (is) s
177 2856 m (used.) s
342 2773 m (+) s
483 2773 m (logical disjunction \(or\)) s
342 2713 m (-) s
483 2713 m (logical difference \(exclusive or\)) s
342 2653 m (*) s
483 2653 m (logical conjunction \(and\)) s
342 2593 m (~) s
483 2593 m (negation \(not\)) s
177 2510 m (A ) s
(Syntax12i.Scn.Fnt) f (multiplexer) s
(Syntax12.Scn.Fnt) f ( is denoted by MUX\(s: a, b\) and is equal to ~s*a + s*b.) s
177 2427 m (A) s
216 2427 m (Syntax12i.Scn.Fnt) f (register) s
356 2427 m (Syntax12.Scn.Fnt) f (provides) s
523 2427 m (the) s
596 2427 m (means) s
732 2427 m (to) s
783 2427 m (specify) s
919 2427 m (a) s
952 2427 m (value) s
1060 2427 m (depending) s
1268 2427 m (on) s
1329 2427 m (previous) s
1496 2427 m (values) s
1621 2427 m (in) s
1669 2427 m (time) s
1766 2427 m (\(sequential) s
1984 2427 m (circuit\).) s
177 2367 m (The) s
257 2367 m (value) s
365 2367 m (of) s
414 2367 m (REG\(ck:) s
571 2367 m (en,) s
639 2367 m (d\)) s
691 2367 m (in) s
739 2367 m (the) s
811 2367 m (Syntax12i.Scn.Fnt) f (next) s
898 2367 m (Syntax12.Scn.Fnt) f (clock) s
1005 2367 m (cycle) s
1105 2367 m (is) s
1145 2367 m (equal) s
1259 2367 m (to) s
1309 2367 m (d) s
1345 2367 m (in) s
1392 2367 m (the) s
1463 2367 m (current) s
1608 2367 m (clock) s
1714 2367 m (cycle,) s
1823 2367 m (if) s
1858 2367 m (en) s
1915 2367 m (=) s
1952 2367 m ('1.) s
2006 2367 m (If) s
2042 2367 m (en) s
2099 2367 m (=) s
177 2307 m ('0,) s
232 2307 m (the) s
305 2307 m (previous) s
473 2307 m (value) s
582 2307 m (is) s
623 2307 m (retained.) s
798 2307 m (en) s
856 2307 m (is) s
896 2307 m (called) s
1015 2307 m (the) s
1087 2307 m (register's) s
1259 2307 m (Syntax12i.Scn.Fnt) f (enable) s
1382 2307 m (Syntax12.Scn.Fnt) f (signal.) s
1511 2307 m (In) s
1560 2307 m (the) s
1632 2307 m (short) s
1739 2307 m (form) s
1842 2307 m (REG\(en,) s
2003 2307 m (d\),) s
2065 2307 m (the) s
177 2247 m (clock) s
288 2247 m (signal) s
410 2247 m (does) s
511 2247 m (not) s
589 2247 m (appear) s
730 2247 m (explicitly) s
905 2247 m (and) s
990 2247 m (is) s
1033 2247 m (assumed) s
1212 2247 m (to) s
1265 2247 m (be) s
1325 2247 m (a) s
1361 2247 m (Syntax12i.Scn.Fnt) f (global) s
1480 2247 m (clock,) s
1595 2247 m (Syntax12.Scn.Fnt) f (as) s
1648 2247 m (is) s
1691 2247 m (typical) s
1824 2247 m (for) s
1891 2247 m (synchronous) s
177 2187 m (circuits. The short notation REG\(d\) stands for REG\('1, d\).) s
177 2104 m (A) s
216 2104 m (Syntax12i.Scn.Fnt) f (latch,) s
325 2104 m (Syntax12.Scn.Fnt) f (denoted) s
491 2104 m (by) s
546 2104 m (LATCH\(g,) s
733 2104 m (d\),) s
796 2104 m (is) s
837 2104 m (a) s
871 2104 m (storage) s
1017 2104 m (element) s
1182 2104 m (which) s
1308 2104 m (holds) s
1422 2104 m (a) s
1456 2104 m (logic) s
1555 2104 m (value) s
1664 2104 m (while) s
1777 2104 m (g) s
1810 2104 m (=) s
1848 2104 m ('0.) s
1903 2104 m (If) s
1940 2104 m (g) s
1973 2104 m (=) s
2011 2104 m ('1,) s
2065 2104 m (the) s
177 2044 m (value d is acquired \(and the latch is transparent\).) s
177 1961 m (A basic ) s
(Syntax12i.Scn.Fnt) f (SR-latch) s
(Syntax12.Scn.Fnt) f ( with \(active-low\) set and reset signals is expressed as SR\(s', r'\).) s
177 1841 m (Apart) s
290 1841 m (from) s
394 1841 m (logic) s
493 1841 m (expressions) s
718 1841 m (there) s
827 1841 m (exist) s
922 1841 m (numeric) s
1089 1841 m (expressions.) s
1324 1841 m (They) s
1422 1841 m (follow) s
1550 1841 m (the) s
1622 1841 m (same) s
1732 1841 m (rules) s
1833 1841 m (of) s
1882 1841 m (composition;) s
177 1781 m (their) s
288 1781 m (operators) s
488 1781 m (are) s
570 1781 m (those) s
696 1781 m (of) s
757 1781 m (addition,) s
945 1781 m (subtraction,) s
1188 1781 m (multiplication,) s
1482 1781 m (division,) s
1657 1781 m (and) s
1751 1781 m (exponentiation) s
2055 1781 m (and) s
177 1721 m (\(integer\) logarithm to the base 2.) s
259 1629 m (Syntax10.Scn.Fnt) f (selector =) s
495 1629 m ({"." identifier | "." integer | "[" expression ) s
(Syntax10m.Scn.Fnt) f ([ "..") s
(Syntax10.Scn.Fnt) f ( expression] "]"}.) s
259 1580 m (factor =) s
495 1580 m (identifier selector | LogicValue | integer | "\(" expression "\)" |) s
495 1531 m ("MUX" "\(" expression ":" expression "," expression "\)" |) s
495 1482 m ("REG" "\(" [expression ":"][expression ","] expression "\)" |) s
495 1433 m ("LATCH" "\(" expression "," expression "\)" |) s
495 1384 m ("SR" "\(" expression "," expression "\)" |) s
495 1335 m ("~" factor | "EXP" factor | "LOG" factor.) s
259 1286 m (term =) s
495 1286 m (factor {\("*" | "/" | "DIV" | "MOD"\) factor}.) s
259 1237 m (expression =) s
495 1237 m (term {\("+" | "-"\) term}.) s
177 1157 m (Note that the selector parameter\(s\) of MUX is followed by a colon instead of a comma.) s
177 1074 m (Syntax12.Scn.Fnt) f (A) s
215 1074 m (selector) s
369 1074 m (of) s
418 1074 m (the) s
490 1074 m (form) s
593 1074 m ([m) s
660 1074 m (..) s
694 1074 m (n],) s
757 1074 m (applied) s
905 1074 m (to) s
955 1074 m (an) s
1013 1074 m (array) s
1115 1074 m (variable) s
1269 1074 m (Syntax12i.Scn.Fnt) f (a,) s
1312 1074 m (Syntax12.Scn.Fnt) f (denotes) s
1470 1074 m (the) s
1541 1074 m (subarray) s
1708 1074 m (Syntax12i.Scn.Fnt) f (a[m],) s
1817 1074 m (a[m+1],) s
1975 1074 m (...) s
2018 1074 m (,) s
2039 1074 m (a[n].) s
177 1014 m (Syntax12.Scn.Fnt) f (It) s
223 1014 m (can) s
308 1014 m (be) s
373 1014 m (used) s
480 1014 m (as) s
538 1014 m (actual) s
669 1014 m (parameter) s
880 1014 m (in) s
936 1014 m (unit) s
1031 1014 m (assignments) s
1279 1014 m (\(see) s
1374 1014 m (7.2.8\)) s
1503 1014 m (corresponding) s
1787 1014 m (to) s
1844 1014 m (a) s
1884 1014 m (formal) s
2026 1014 m (input) s
177 954 m (variable.) s
177 834 m (LOG) s
274 834 m (n) s
313 834 m (\(n) s
368 834 m (>=) s
434 834 m (0\)) s
488 834 m (is) s
530 834 m (the) s
604 834 m (binary) s
731 834 m (logarithm,) s
935 834 m (rounded) s
1106 834 m (down) s
1225 834 m (to) s
1276 834 m (the) s
1349 834 m (next) s
1442 834 m (integer.) s
1594 834 m (LOG) s
1690 834 m (0) s
1727 834 m (=) s
1766 834 m (0.) s
1814 834 m (EXP) s
1897 834 m (x) s
1930 834 m (\(x) s
1979 834 m (>=) s
2044 834 m (0\)) s
2097 834 m (is) s
177 774 m (equal to 2^x.) s
177 667 m (Syntax12m.Scn.Fnt) f (7. Assignments) s
177 589 m (Syntax12.Scn.Fnt) f (Assignments) s
423 589 m (serve) s
528 589 m (to) s
579 589 m (define) s
707 589 m (a) s
741 589 m (variable's) s
921 589 m (value,) s
1040 589 m (which) s
1166 589 m (is) s
1207 589 m (specified) s
1381 589 m (as) s
1432 589 m (that) s
1518 589 m (of) s
1567 589 m (an) s
1625 589 m (expression.) s
1843 589 m (The) s
1923 589 m (form) s
2026 589 m (v) s
2056 589 m (:=) s
2105 589 m (x) s
177 529 m (stands) s
311 529 m (for) s
379 529 m ("let) s
455 529 m (v) s
489 529 m (be) s
550 529 m (equal) s
668 529 m (to) s
722 529 m (x".) s
783 529 m (Hence,) s
926 529 m (an) s
988 529 m (assignment) s
1215 529 m (must) s
1326 529 m (be) s
1387 529 m (understood) s
1616 529 m (as) s
1670 529 m (a) s
1707 529 m (variable's) s
1889 529 m (Syntax12i.Scn.Fnt) f (definition) s
2073 529 m (Syntax12.Scn.Fnt) f (\(in) s
177 469 m (contrast) s
348 469 m (to) s
408 469 m (an) s
476 469 m (identifier's) s
689 469 m (declaration\).) s
944 469 m (v) s
984 469 m (and) s
1076 469 m (x) s
1117 469 m (do) s
1186 469 m (not) s
1270 469 m (have) s
1376 469 m (the) s
1457 469 m (same) s
1576 469 m (roles,) s
1695 469 m (and) s
1786 469 m (this) s
1874 469 m (asymmetry) s
2097 469 m (is) s
177 409 m (emphasized by the use of the symbol := instead of the symmetric equal sign \(=\).) s
177 326 m (If) s
223 326 m (a) s
265 326 m (variable) s
428 326 m (is) s
477 326 m (of) s
535 326 m (type) s
633 326 m (BIT,) s
723 326 m (the) s
804 326 m (expression) s
1019 326 m (must) s
1134 326 m (be) s
1199 326 m (of) s
1256 326 m (any) s
1340 326 m (basic) s
1452 326 m (type,) s
1559 326 m (and) s
1649 326 m (only) s
1747 326 m (a) s
1788 326 m (single) s
1914 326 m (assignment) s
177 266 m (\(definition\) is allowed.) s
1 p
%%Page: 0 3
2105 3224 m (Syntax10.Scn.Fnt) f (2) s
177 3119 m (Syntax12.Scn.Fnt) f (If) s
226 3119 m (the) s
310 3119 m (variable's) s
501 3119 m (type) s
602 3119 m (is) s
654 3119 m (TS,) s
732 3119 m (the) s
815 3119 m (statement) s
1024 3119 m (must) s
1142 3119 m (specify) s
1288 3119 m (a) s
1332 3119 m (condition) s
1532 3119 m (\(representing) s
1801 3119 m (a) s
1845 3119 m (tri-state) s
2021 3119 m (gate\).) s
177 3059 m (Arbitrarily) s
371 3059 m (many) s
487 3059 m (assignment) s
711 3059 m (to) s
762 3059 m (the) s
835 3059 m (same) s
946 3059 m (variable) s
1101 3059 m (are) s
1171 3059 m (permitted.) s
1378 3059 m (However,) s
1564 3059 m (the) s
1637 3059 m (value) s
1746 3059 m (of) s
1796 3059 m (the) s
1868 3059 m (bus) s
1946 3059 m (is) s
1986 3059 m (defined) s
177 2999 m (only if some condition's value is '1.) s
259 2899 m (Syntax10.Scn.Fnt) f (assignment =) s
566 2899 m (identifier selector ":=" [condition "|"] expression.) s
259 2839 m (condition =) s
566 2839 m (expression.) s
177 2756 m (Syntax12.Scn.Fnt) f (If) s
219 2756 m (the) s
296 2756 m (variable's) s
479 2756 m (type) s
572 2756 m (is) s
616 2756 m (OC) s
693 2756 m (\(open-collector\),) s
1029 2756 m (arbitrarily) s
1221 2756 m (many) s
1340 2756 m (assignments) s
1584 2756 m (to) s
1638 2756 m (the) s
1714 2756 m (same) s
1828 2756 m (bus) s
1910 2756 m (variable) s
2068 2756 m (are) s
177 2696 m (permitted. The bus value is '1, unless any one of the assigned expressions has the value '0 \(wired-or\).) s
177 2589 m (Syntax12m.Scn.Fnt) f (8. Control Statements) s
177 2511 m (Syntax12.Scn.Fnt) f (Statements) s
412 2511 m (are) s
495 2511 m (either) s
628 2511 m (assignments) s
882 2511 m (or) s
946 2511 m (composites) s
1181 2511 m (of) s
1243 2511 m (assignments,) s
1506 2511 m (namely) s
1666 2511 m (repeated) s
1852 2511 m (or) s
1916 2511 m (conditional) s
177 2451 m (assignments.) s
259 2351 m (Syntax10.Scn.Fnt) f (relation =) s
589 2351 m (expression \("=" | "#" | "<" | "<=" | ">" | ">="\) expression.) s
259 2291 m (IfStatement = ) s
589 2291 m ("IF" relation "THEN" StatementSequence) s
589 2231 m ({"ELSIF" relation "THEN" StatementSequence}) s
589 2171 m (["ELSE" StatementSequence]) s
589 2111 m ("END" .) s
259 2051 m (constructor =) s
589 2051 m ("[" expression {"," expression} "]" .) s
259 1991 m (parameter =) s
589 1991 m (expression | constructor.) s
259 1931 m (ForStatement =) s
589 1931 m ("FOR" identifier ":=" expression ".." expression "DO" StatementSequence "END" .) s
259 1871 m (UnitAssignment =) s
589 1871 m (identifier selector "\(" parameter {"," parameter} "\)".) s
259 1811 m (statement =) s
589 1811 m ([assignment | UnitAssignment | PosAssignment | IfStatement | ForStatement].) s
259 1751 m (StatementSequence =) s
664 1751 m (statement {";" statement}.) s
177 1668 m (Syntax12.Scn.Fnt) f (The) s
263 1668 m (expressions) s
493 1668 m (in) s
547 1668 m (a) s
586 1668 m (for-statement) s
868 1668 m (must) s
981 1668 m (be) s
1043 1668 m (numeric,) s
1225 1668 m (and) s
1312 1668 m (they) s
1407 1668 m (specify) s
1547 1668 m (the) s
1624 1668 m (range) s
1744 1668 m (of) s
1798 1668 m (integer) s
1943 1668 m (values) s
2073 1668 m (for) s
177 1608 m (which) s
302 1608 m (the) s
374 1608 m (constituent) s
595 1608 m (statement) s
793 1608 m (sequence) s
978 1608 m (is) s
1018 1608 m (defined.) s
1180 1608 m (The) s
1259 1608 m (identifier) s
1436 1608 m (associated) s
1636 1608 m (with) s
1730 1608 m (the) s
1801 1608 m (control) s
1944 1608 m (variable) s
2097 1608 m (is) s
177 1548 m (considered) s
396 1548 m (as) s
452 1548 m (being) s
572 1548 m (local) s
676 1548 m (to) s
732 1548 m (the) s
810 1548 m (for-statement,) s
1102 1548 m (i.e.) s
1173 1548 m (does) s
1276 1548 m (not) s
1356 1548 m (exist) s
1456 1548 m (in) s
1509 1548 m (the) s
1586 1548 m (for-statement's) s
1892 1548 m (context.) s
2057 1548 m (The) s
177 1488 m (control variable typically serves as index to array variables.) s
177 1405 m (A) s
218 1405 m (constructor) s
444 1405 m (denotes) s
605 1405 m (a) s
641 1405 m (list) s
709 1405 m (of) s
761 1405 m (signals.) s
910 1405 m (It) s
951 1405 m (can) s
1031 1405 m (be) s
1091 1405 m (used) s
1193 1405 m (as) s
1246 1405 m (an) s
1306 1405 m (actual) s
1431 1405 m (parameter) s
1636 1405 m (corresponding) s
1915 1405 m (to) s
1967 1405 m (a) s
2002 1405 m (formal) s
177 1345 m (array variable with the same number of elements.) s
177 1238 m (Syntax12m.Scn.Fnt) f (9. Modules) s
177 1160 m (Syntax12.Scn.Fnt) f (A) s
215 1160 m (module) s
371 1160 m (specifies) s
537 1160 m (variables) s
708 1160 m (and) s
790 1160 m (a) s
823 1160 m (circuit) s
949 1160 m (involving) s
1124 1160 m (these) s
1233 1160 m (variables.) s
1414 1160 m (A) s
1451 1160 m (module) s
1606 1160 m (may) s
1695 1160 m (also) s
1779 1160 m (contain) s
1929 1160 m (definitions) s
177 1100 m (of composite types. Modules are the textual units for compilation.) s
259 1000 m (Syntax10.Scn.Fnt) f (InType =) s
471 1000 m ({"[" expression "]"} "BIT".) s
259 940 m (InOutType =) s
471 940 m ({"[" expression "]"} \("TS" | "OC"\).) s
259 880 m (OutType =) s
471 880 m ({"[" expression "]"} \("BIT" | "TS" | "OC"\).) s
259 820 m (ImportList  =) s
521 820 m ("IMPORT" identifier {"," identifier} ";" .) s
259 760 m (module  = ) s
471 760 m ("MODULE" identifier ";" [ImportList]) s
471 700 m ({TypeDeclaration ";"}) s
471 640 m (["CONST" {ConstDeclaration}]) s
471 580 m (["IN" {IdList ":" InType ";"}]) s
471 520 m (["INOUT" {IdList ":" InOutType ";"}]) s
471 460 m (["OUT" {IdList ":" OutType ";"}]) s
471 400 m (["VAR" {VarDeclaration}]) s
471 340 m (["CLOCK" expression ";"]) s
471 280 m (["BEGIN" StatementSequence]) s
471 220 m ("END" identifier "." .) s
1 p
%%Page: 0 4
2105 3224 m (Syntax10.Scn.Fnt) f (3) s
177 3119 m (Syntax12.Scn.Fnt) f (Note) s
279 3119 m (that) s
365 3119 m (declarations) s
600 3119 m (introduce) s
790 3119 m (identifiers) s
984 3119 m (for) s
1047 3119 m (variables,) s
1227 3119 m (and) s
1308 3119 m (statements) s
1522 3119 m (define) s
1648 3119 m (their) s
1745 3119 m (values.) s
1880 3119 m (The) s
1959 3119 m (identifier) s
177 3059 m (at the end of the module's declaration must match the one following the symbol MODULE.) s
177 2976 m (The) s
257 2976 m (clock) s
364 2976 m (declaration) s
582 2976 m (serves) s
703 2976 m (to) s
753 2976 m (specify) s
888 2976 m (the) s
960 2976 m (value) s
1068 2976 m (of) s
1116 2976 m (the) s
1187 2976 m (global) s
1310 2976 m (clock,) s
1426 2976 m (which) s
1550 2976 m (is) s
1589 2976 m (taken) s
1703 2976 m (as) s
1752 2976 m (default) s
1892 2976 m (in) s
1939 2976 m (a) s
1971 2976 m (factor) s
2088 2976 m (of) s
177 2916 m (the form REG\(en, d\) \(see Sect. 6\).) s
177 2833 m (Example:) s
362 2833 m (The) s
445 2833 m (following) s
633 2833 m (circuit) s
762 2833 m (represents) s
967 2833 m (an) s
1028 2833 m (8-bit) s
1142 2833 m (binary) s
1271 2833 m (adder) s
1391 2833 m (with) s
1489 2833 m (inputs) s
1620 2833 m (x) s
1655 2833 m (\(x.0) s
1741 2833 m (...) s
1789 2833 m (x.7\),) s
1884 2833 m (y) s
1916 2833 m (\(y.0) s
1999 2833 m (...) s
2046 2833 m (y.7\),) s
177 2773 m (and the carry ) s
(Syntax12i.Scn.Fnt) f (ci.) s
(Syntax12.Scn.Fnt) f ( Its outputs are the sum s \(s.0 ... s.7\) and the carry ) s
(Syntax12i.Scn.Fnt) f (co.) s
295 2681 m (Syntax10.Scn.Fnt) f (MODULE Adder;) s
365 2632 m (CONST N := 8;) s
365 2583 m (IN x, y: [N] BIT; ci: BIT;) s
365 2534 m (OUT s: [N] BIT; co: BIT;) s
365 2485 m (VAR c: [N] BIT;) s
295 2436 m (BEGIN) s
365 2387 m (s.0 := x.0 - y.0 - ci; c.0 := \(x.0 * y.0\) + \(x.0 - y.0\)*ci;) s
365 2338 m (FOR i := 1 .. N-1 DO) s
448 2289 m (s.i := x.i - y.i - c[i-1]; c.i := \(x.i - y.i\) + \(x.i - y.i\) * c[i-1]) s
365 2240 m (END ;) s
365 2191 m (co := c[N-1]) s
295 2142 m (END Adder.) s
177 2038 m (Syntax12m.Scn.Fnt) f (10. Composite Types and Unit Assignments) s
177 1960 m (Syntax12.Scn.Fnt) f (In) s
226 1960 m (addition) s
392 1960 m (to) s
442 1960 m (basic) s
546 1960 m (types) s
652 1960 m (and) s
734 1960 m (array) s
836 1960 m (types,) s
952 1960 m (composite) s
1157 1960 m (types) s
1263 1960 m (can) s
1340 1960 m (be) s
1397 1960 m (declared.) s
1576 1960 m (This) s
1663 1960 m (facility) s
1793 1960 m (may) s
1882 1960 m (be) s
1938 1960 m (compared) s
177 1900 m (to) s
240 1900 m (record) s
383 1900 m (types) s
502 1900 m (in) s
563 1900 m (programming) s
843 1900 m (languages,) s
1061 1900 m (and) s
1156 1900 m (variables) s
1340 1900 m (\(instances\)) s
1566 1900 m (of) s
1627 1900 m (such) s
1737 1900 m (types) s
1855 1900 m (correspond) s
2087 1900 m (to) s
177 1840 m (components) s
421 1840 m (of) s
470 1840 m (circuits,) s
623 1840 m (i.e.) s
689 1840 m (to) s
739 1840 m (objects) s
881 1840 m (being) s
994 1840 m (part) s
1079 1840 m (of) s
1127 1840 m (a) s
1159 1840 m (circuit.) s
1295 1840 m (A) s
1332 1840 m (type) s
1420 1840 m (declaration) s
1637 1840 m (specifies) s
1802 1840 m (a) s
1834 1840 m (composite) s
2038 1840 m (type,) s
177 1780 m (of) s
227 1780 m (which) s
353 1780 m (instances) s
536 1780 m (are) s
606 1780 m (introduced) s
821 1780 m (by) s
876 1780 m (variable) s
1031 1780 m (declarations.) s
1278 1780 m (The) s
1359 1780 m (heading) s
1519 1780 m (of) s
1568 1780 m (a) s
1601 1780 m (type) s
1690 1780 m (declaration) s
1908 1780 m (contains) s
2076 1780 m (up) s
177 1720 m (to four sections:) s
224 1637 m (1.) s
271 1637 m (The) s
351 1637 m (section) s
494 1637 m (headed) s
642 1637 m (by) s
696 1637 m (the) s
768 1637 m (symbol) s
913 1637 m (IN) s
968 1637 m (declares) s
1129 1637 m (input) s
1240 1637 m (signals) s
1375 1637 m (to) s
1424 1637 m (which) s
1548 1637 m (no) s
1608 1637 m (assignments) s
1847 1637 m (within) s
1977 1637 m (the) s
2048 1637 m (type) s
224 1577 m (declaration) s
447 1577 m (are) s
521 1577 m (permitted.) s
732 1577 m (The) s
817 1577 m (identifiers) s
1017 1577 m (act) s
1088 1577 m (as) s
1143 1577 m (formal) s
1283 1577 m (names) s
1423 1577 m (for) s
1491 1577 m (expressions) s
1719 1577 m (specified) s
1896 1577 m (externally) s
2089 1577 m (in) s
224 1517 m (unit) s
316 1517 m (assignments,) s
571 1517 m (where) s
703 1517 m (the) s
780 1517 m (expressions) s
1009 1517 m (appear) s
1152 1517 m (in) s
1205 1517 m (the) s
1282 1517 m (form) s
1390 1517 m (of) s
1444 1517 m (parameters.) s
1679 1517 m (The) s
1763 1517 m (types) s
1873 1517 m (of) s
1926 1517 m (the) s
2002 1517 m (formal) s
224 1457 m (names) s
361 1457 m (must) s
470 1457 m (be) s
529 1457 m (BIT) s
602 1457 m (or) s
655 1457 m (arrays) s
775 1457 m (thereof.) s
932 1457 m (The) s
1013 1457 m (corresponding) s
1291 1457 m (actual) s
1415 1457 m (expressions) s
1640 1457 m (must) s
1748 1457 m (be) s
1806 1457 m (of) s
1856 1457 m (any) s
1933 1457 m (basic) s
2038 1457 m (type,) s
224 1397 m (or an array thereof.) s
224 1314 m (2.) s
277 1314 m (The) s
363 1314 m (section) s
512 1314 m (headed) s
666 1314 m (by) s
726 1314 m (the) s
803 1314 m (symbol) s
953 1314 m (INOUT) s
1099 1314 m (declares) s
1265 1314 m (signals) s
1405 1314 m (to) s
1460 1314 m (which) s
1590 1314 m (assignments) s
1835 1314 m (within) s
1971 1314 m (the) s
2048 1314 m (type) s
224 1254 m (declaration) s
450 1254 m (are) s
527 1254 m (permitted.) s
741 1254 m (As) s
804 1254 m (in) s
859 1254 m (the) s
938 1254 m (case) s
1035 1254 m (of) s
1091 1254 m (inputs,) s
1236 1254 m (the) s
1315 1254 m (identifiers) s
1517 1254 m (act) s
1590 1254 m (as) s
1647 1254 m (formal) s
1789 1254 m (names) s
1931 1254 m (for) s
2002 1254 m (signals) s
224 1194 m (declared outside the type declaration. Their types must be TS or OC or arrays thereof.) s
224 1111 m (3.) s
273 1111 m (The) s
354 1111 m (section) s
498 1111 m (headed) s
647 1111 m (by) s
702 1111 m (the) s
775 1111 m (symbol) s
921 1111 m (OUT) s
1020 1111 m (declares) s
1182 1111 m (actual) s
1306 1111 m (variables.) s
1489 1111 m (Their) s
1596 1111 m (type) s
1686 1111 m (must) s
1794 1111 m (be) s
1852 1111 m (BIT,) s
1934 1111 m (TS,) s
2002 1111 m (OC,) s
2086 1111 m (or) s
224 1051 m (an) s
288 1051 m (array) s
396 1051 m (thereof.) s
558 1051 m (These) s
682 1051 m (output) s
826 1051 m (variables) s
1003 1051 m (are) s
1078 1051 m (accessible) s
1277 1051 m (in) s
1331 1051 m (the) s
1409 1051 m (scope) s
1532 1051 m (\(type) s
1643 1051 m (declaration\)) s
1882 1051 m (in) s
1935 1051 m (which) s
2065 1051 m (the) s
224 991 m (composite) s
432 991 m (variable) s
589 991 m (is) s
632 991 m (declared.) s
814 991 m (There) s
933 991 m (they) s
1026 991 m (are) s
1098 991 m (denoted) s
1266 991 m (by) s
1322 991 m (the) s
1396 991 m (composite) s
1603 991 m (variable's) s
1784 991 m (identifier) s
1964 991 m (followed) s
224 931 m (by) s
280 931 m (the) s
354 931 m (output) s
494 931 m (identifier) s
674 931 m (as) s
726 931 m (selector) s
881 931 m (\(the) s
970 931 m (latter) s
1079 931 m (acting) s
1203 931 m (like) s
1281 931 m (a) s
1315 931 m (field) s
1408 931 m (identifier) s
1587 931 m (of) s
1637 931 m (a) s
1671 931 m (record\).) s
1829 931 m (No) s
1897 931 m (assignments) s
224 871 m (are permitted outside the declaration in which the output is declared.) s
224 788 m (4.) s
272 788 m (The) s
353 788 m (section) s
497 788 m (headed) s
646 788 m (by) s
701 788 m (the) s
774 788 m (symbol) s
920 788 m (VAR) s
1009 788 m (declares) s
1171 788 m (actual) s
1295 788 m (variables.) s
1478 788 m (They) s
1577 788 m (are) s
1647 788 m (not) s
1723 788 m (accessible) s
1917 788 m (outside) s
2065 788 m (the) s
224 728 m (type declaration.) s
177 645 m (Summary) s
295 582 m (Syntax10.Scn.Fnt) f (mode) s
602 582 m (allowed types) s
1050 582 m (types of corresponding actual parameters) s
295 522 m (IN) s
602 522 m (BIT) s
1050 522 m (BIT, TS, OC) s
295 473 m (INOUT) s
602 473 m (TS, OC) s
1050 473 m (TS, OC) s
295 424 m (OUT) s
602 424 m (BIT, TS, OC) s
295 375 m (VAR) s
602 375 m (BIT, TS, OC, declared type) s
1 p
%%Page: 0 5
2105 3224 m (Syntax10.Scn.Fnt) f (4) s
177 3119 m (Syntax12.Scn.Fnt) f (Consider the following example:) s
295 3027 m (Syntax10.Scn.Fnt) f (TYPE AddElem;) s
377 2978 m (IN x, y, ci: BIT;) s
377 2929 m (OUT z, co: BIT;) s
377 2880 m (VAR h: BIT;) s
295 2831 m (BEGIN h := x - y; z := h - ci; co := \(x * y\) + \(h * ci\)) s
295 2782 m (END AddElem) s
177 2685 m (Syntax12.Scn.Fnt) f (A variable u of type ) s
(Syntax12i.Scn.Fnt) f (AddElem) s
(Syntax12.Scn.Fnt) f ( \(i.e. an instance of an ) s
(Syntax12i.Scn.Fnt) f (AddElem) s
(Syntax12.Scn.Fnt) f (\) is introduced by the declaration:) s
295 2610 m (Syntax10.Scn.Fnt) f (u: AddElem) s
177 2530 m (Syntax12.Scn.Fnt) f (The inputs appear in the form of parameters \(expressions\) in a statement called ) s
(Syntax12i.Scn.Fnt) f (unit assignment:) s
295 2455 m (Syntax10.Scn.Fnt) f (u\(a, b, c\)) s
177 2375 m (Syntax12.Scn.Fnt) f (The) s
258 2375 m (components) s
503 2375 m (of) s
552 2375 m (u) s
589 2375 m (are) s
658 2375 m (obtained) s
834 2375 m (by) s
888 2375 m (substitution) s
1121 2375 m (of) s
1170 2375 m (the) s
1242 2375 m (actual) s
1365 2375 m (expressions) s
1589 2375 m (for) s
1653 2375 m (the) s
1725 2375 m (corresponding) s
2002 2375 m (formal) s
177 2315 m (identifiers:) s
295 2223 m (Syntax10.Scn.Fnt) f (u.h := a - b;) s
295 2174 m (u.z := u.h - c;) s
295 2125 m (u.co := \(a * b\) + \(u.h * c\)) s
177 2045 m (Syntax12.Scn.Fnt) f (An 8-bit adder with inputs X and Y can now be declared as consisting of 8 identical elements) s
295 1970 m (Syntax10.Scn.Fnt) f (U: [8] AddElem) s
177 1890 m (Syntax12.Scn.Fnt) f (defined by the following assignments:) s
295 1815 m (Syntax10.Scn.Fnt) f (U.0\(X.0, Y.0, '0\);) s
295 1766 m (FOR i := 1 .. 7 DO U.i\(X.i, Y.i, U[i-1].co\) END) s
177 1686 m (Syntax12.Scn.Fnt) f (and the sum is represented by the variables U.0.z ... U.7.z .) s
259 1586 m (Syntax10.Scn.Fnt) f (TypeDeclaration =) s
613 1586 m ("TYPE" identifier ["*"] ["\(" IdList "\)"] ";") s
613 1526 m (["CONST" {ConstDeclaration}]) s
613 1466 m (["IN" {IdList ":" InType ";"}]) s
613 1406 m (["INOUT" {IdList ":" InOutType ";"}]) s
613 1346 m (["OUT" {IdList ":" OutType ";"}]) s
613 1286 m (["VAR" {VarDeclaration}]) s
613 1226 m (["BEGIN" StatementSequence]) s
613 1166 m ("END" identifier.) s
177 1066 m (Syntax12.Scn.Fnt) f (The) s
259 1066 m (number) s
422 1066 m (of) s
473 1066 m (bracket) s
623 1066 m (pairs) s
725 1066 m (in) s
775 1066 m (a) s
810 1066 m (formal) s
947 1066 m (type) s
1038 1066 m (specifies) s
1206 1066 m (the) s
1280 1066 m (number) s
1443 1066 m (of) s
1494 1066 m (indices) s
1636 1066 m (used) s
1737 1066 m (for) s
1803 1066 m (this) s
1884 1066 m (parameter.) s
2100 1066 m (If) s
177 1006 m (an) s
247 1006 m (expression) s
466 1006 m (is) s
518 1006 m (specified,) s
713 1006 m (it) s
762 1006 m (indicates) s
949 1006 m (the) s
1033 1006 m (length) s
1174 1006 m (of) s
1235 1006 m (the) s
1319 1006 m (corresponding) s
1608 1006 m (actual) s
1742 1006 m (arrays) s
1872 1006 m (given) s
1991 1006 m (in) s
2050 1006 m (unit) s
177 946 m (assignments. The identifier at the end of the declaration must match the one following the symbol TYPE.) s
177 839 m (Syntax12m.Scn.Fnt) f (11. Generic Types) s
177 761 m (Syntax12.Scn.Fnt) f (Declared) s
363 761 m (types) s
479 761 m (can) s
566 761 m (be) s
633 761 m (supplied) s
812 761 m (with) s
917 761 m (parameters) s
1147 761 m (and) s
1239 761 m (therefore) s
1430 761 m (define) s
1567 761 m (an) s
1635 761 m (entire) s
1764 761 m (class) s
1871 761 m (of) s
1930 761 m (types.) s
2057 761 m (The) s
177 701 m (parameters are numeric quantities and are used, for example, to specify the length of arrays. Example:) s
330 609 m (Syntax10.Scn.Fnt) f (TYPE Counter\(N\);) s
377 560 m (IN ci: BIT;) s
377 511 m (OUT co: BIT; q: [N] BIT;) s
377 462 m (VAR c: [N] BIT;) s
330 413 m (BEGIN q.0 := REG\(q.0 - ci\); c.0 := q.0 * ci;) s
377 364 m (FOR i := 1 .. N-1 DO q.i := REG\(q.i - c[i-1]\); ci := q.0 * c[i-1] END ;) s
377 315 m (co := c[N-1]) s
330 266 m (END Counter) s
1 p
%%Page: 0 6
2105 3224 m (Syntax10.Scn.Fnt) f (5) s
177 3119 m (Syntax12.Scn.Fnt) f (An instance u of a counter with 8 elements is declared as) s
330 3036 m (Syntax10.Scn.Fnt) f (u: Counter\(8\)) s
177 2953 m (Syntax12.Scn.Fnt) f (yielding the variables) s
330 2870 m (Syntax10.Scn.Fnt) f (u.co, u.q.0. ... , u.q.7  and  u.c.0, .. , u.c.7) s
177 2787 m (Syntax12.Scn.Fnt) f (Note) s
283 2787 m (that) s
373 2787 m (u.c) s
444 2787 m (is) s
488 2787 m (local,) s
600 2787 m (i.e.) s
670 2787 m (not) s
749 2787 m (accessible) s
946 2787 m (outside) s
1098 2787 m (the) s
1174 2787 m (type) s
1267 2787 m (declaration.) s
1500 2787 m (A) s
1542 2787 m (corresponding) s
1823 2787 m (unit) s
1914 2787 m (assignment) s
177 2727 m (with enable signal e is now expressed by) s
330 2644 m (Syntax10.Scn.Fnt) f (u\(e\)) s
177 2537 m (Syntax12m.Scn.Fnt) f (12. Placement Information) s
177 2459 m (Syntax12.Scn.Fnt) f (Variables) s
360 2459 m (may) s
454 2459 m (be) s
514 2459 m (attributed) s
712 2459 m (with) s
810 2459 m (a) s
846 2459 m (list) s
914 2459 m (of) s
966 2459 m (integer) s
1109 2459 m (values.) s
1248 2459 m (The) s
1331 2459 m (language) s
1512 2459 m (does) s
1613 2459 m (not) s
1691 2459 m (specify) s
1829 2459 m (their) s
1930 2459 m (semantics.) s
177 2399 m (However,) s
365 2399 m (their) s
466 2399 m (typical) s
599 2399 m (use) s
677 2399 m (is) s
720 2399 m (as) s
773 2399 m (coordinates) s
1003 2399 m (of) s
1055 2399 m (the) s
1130 2399 m (positions) s
1312 2399 m (of) s
1364 2399 m (parts) s
1470 2399 m (generating) s
1680 2399 m (the) s
1755 2399 m (respective) s
1951 2399 m (signals) s
2089 2399 m (in) s
177 2339 m (physical devices. The values are assigned to a variable by a position assignment.) s
236 2247 m (Syntax10.Scn.Fnt) f (position =) s
590 2247 m (expression {"," expression} | "[" position {";" position} "]" .) s
236 2198 m (PosAssignment =) s
590 2198 m (identifier selector "::" position.) s
177 2118 m (Syntax12.Scn.Fnt) f (If) s
216 2118 m (the) s
290 2118 m (attributed) s
487 2118 m (variable) s
643 2118 m (is) s
684 2118 m (an) s
743 2118 m (array,) s
856 2118 m (a) s
890 2118 m (list) s
956 2118 m (of) s
1006 2118 m (positions) s
1186 2118 m (can) s
1264 2118 m (be) s
1322 2118 m (specified,) s
1506 2118 m (whose) s
1639 2118 m (elements) s
1821 2118 m (are) s
1891 2118 m (attributed) s
2087 2118 m (to) s
177 2058 m (the corresponding elements of the array.) s
177 1975 m (Examples for variables ) s
(Syntax12i.Scn.Fnt) f (x, y: BIT; z: [4] BIT:) s
236 1892 m (Syntax12.Scn.Fnt) f (x :: 2;) s
495 1892 m (y :: 3, 4, 5;) s
838 1892 m (z :: [6,7; 8,9; 10,11]) s
177 1809 m (If) s
216 1809 m (variables) s
389 1809 m (local) s
489 1809 m (to) s
541 1809 m (a) s
576 1809 m (type) s
667 1809 m (declaration) s
887 1809 m (are) s
958 1809 m (attributed,) s
1165 1809 m (the) s
1239 1809 m (specified) s
1413 1809 m (values) s
1539 1809 m (are) s
1609 1809 m (added) s
1736 1809 m (to) s
1787 1809 m (the) s
1860 1809 m (corresponding) s
177 1749 m (attributes) s
367 1749 m (of) s
418 1749 m (every) s
525 1749 m (instance) s
692 1749 m (of) s
743 1749 m (the) s
817 1749 m (type.) s
919 1749 m (This) s
1008 1749 m (implies) s
1156 1749 m (that) s
1244 1749 m (the) s
1318 1749 m (attributed) s
1515 1749 m (coordinates) s
1744 1749 m (of) s
1794 1749 m (the) s
1867 1749 m (local) s
1966 1749 m (variables) s
177 1689 m (are relative to the origin of the instance.) s
1 p
%%Page: 0 7
2105 3224 m (Syntax10.Scn.Fnt) f (6) s
177 3059 m (Syntax12m.Scn.Fnt) f (13. Lola Syntax) s
236 2967 m (Syntax10.Scn.Fnt) f (identifier  =) s
554 2967 m (letter {letter | digit} ["'"].) s
236 2918 m (integer  =) s
554 2918 m (digit {digit}.) s
236 2869 m (LogicValue =) s
554 2869 m ("'0" | "'1".) s
236 2797 m (BasicType =) s
554 2797 m ("BIT" | "TS" | "OC".) s
236 2748 m (SimpleType =) s
554 2748 m (BasicType | identifier ["\(" ExpressionList "\)"].) s
236 2699 m (ExpressionList =) s
554 2699 m (expression {"," expression}.) s
236 2627 m (type =) s
554 2627 m ({ "[" expression "]" } SimpleType.) s
236 2578 m (ConstDeclaration =) s
602 2578 m (identifier ":=" expression ";".) s
236 2529 m (VarDeclaration =) s
554 2529 m (IdList ":" type ";".) s
236 2480 m (IdList =) s
554 2480 m (identifier {"," identifier}.) s
236 2408 m (selector =) s
554 2408 m ({"." identifier | "." integer | "[" expression [ ".." expression] "]"}.) s
236 2359 m (factor =) s
554 2359 m (identifier selector | LogicValue | integer | "\(" expression "\)" |) s
554 2310 m ("MUX" "\(" expression ":" expression "," expression "\)" |) s
554 2261 m ("REG" "\(" [expression ":"][expression ","] expression "\)" |) s
554 2212 m ("LATCH" "\(" expression "," expression "\)" |) s
554 2163 m ("SR" "\(" expression "," expression "\)" |) s
554 2114 m ("~" factor | "EXP" factor | "LOG" factor.) s
236 2065 m (term =) s
554 2065 m (factor {\("*" | "/" | "DIV" | "MOD"\) factor}.) s
236 2016 m (expression =) s
554 2016 m (term {\("+" | "-"\) term}.) s
236 1944 m (condition =) s
554 1944 m (expression.) s
236 1895 m (assignment =) s
554 1895 m (identifier selector ":=" [condition "|"] expression.) s
236 1846 m (relation =) s
554 1846 m (expression \("=" | "#" | "<" | "<=" | ">" | ">="\) expression.) s
236 1797 m (IfStatement = ) s
554 1797 m ("IF" relation "THEN" StatementSequence) s
554 1748 m ({"ELSIF" relation "THEN" StatementSequence}) s
554 1699 m (["ELSE" StatementSequence]) s
554 1650 m ("END" .) s
236 1601 m (ForStatement =) s
554 1601 m ("FOR" identifier ":=" expression ".." expression "DO" StatementSequence "END" .) s
236 1552 m (constructor =) s
554 1552 m ("[" expression {"," expression} "]".) s
236 1503 m (parameter =) s
554 1503 m (expression | constructor.) s
236 1454 m (UnitAssignment =) s
554 1454 m (identifier selector "\(" parameter {"," parameter} "\)".) s
236 1405 m (position =) s
554 1405 m (expression {"," expression} | "[" position {";" position} "]" .) s
236 1356 m (PosAssignment =) s
554 1356 m (identifier selector "::" position.) s
236 1307 m (statement =) s
554 1307 m ([assignment | UnitAssignment | PosAssignment | IfStatement | ForStatement].) s
236 1258 m (StatementSequence =) s
641 1258 m (statement {";" statement}.) s
236 1186 m (InType =) s
519 1186 m ({"[" expression "]"} "BIT".) s
236 1137 m (InOutType =) s
519 1137 m ({"[" expression "]"} \("TS" | "OC"\).) s
236 1088 m (OutType =) s
519 1088 m ({"[" expression "]"} \("BIT" | "TS" | "OC"\).) s
236 1039 m (ImportList  =) s
519 1039 m ("IMPORT" identifier {"," identifier} ";" .) s
236 990 m (module  = ) s
519 990 m ("MODULE" identifier ";" [ImportList]) s
519 941 m ({TypeDeclaration ";"}) s
519 892 m (["CONST" {ConstDeclaration}]) s
519 843 m (["IN" {IdList ":" InType ";"}]) s
519 794 m (["INOUT" {IdList ":" InOutType ";"}]) s
519 745 m (["OUT" {IdList ":" OutType ";"}]) s
519 696 m (["VAR" {VarDeclaration}]) s
519 647 m (["CLOCK" expression ";"]) s
519 598 m (["BEGIN" StatementSequence]) s
519 549 m ("END" identifier "." .) s
236 477 m (TypeDeclaration =) s
585 477 m ("TYPE" identifier ["*"] ["\(" IdList "\)"] ";") s
519 428 m (["CONST" {ConstDeclaration}]) s
519 379 m (["IN" {IdList ":" InType ";"}]) s
519 330 m (["INOUT" {IdList ":" InOutType ";"}]) s
519 281 m (["OUT" {IdList ":" OutType ";"}]) s
519 232 m (["VAR" {VarDeclaration}]) s
1 p
%%Page: 0 8
2105 3224 m (Syntax10.Scn.Fnt) f (7) s
519 3127 m (["BEGIN" [StatementSequence]) s
519 3078 m ("END" identifier.) s
1 p
%%Page: 0 9
2105 3224 m (Syntax10.Scn.Fnt) f (8) s
177 3059 m (Syntax12m.Scn.Fnt) f (14. Lola-Compiler Error Numbers) s
271 2954 m (Syntax10.Scn.Fnt) f (0) s
377 2954 m (undefined identifier) s
271 2914 m (1) s
377 2914 m (multiple definition of identifier) s
271 2874 m (2) s
377 2874 m (identifier too long) s
271 2834 m (3) s
377 2834 m (field identifier not visible) s
271 2794 m (4) s
377 2794 m (identifier mismatch) s
271 2754 m (5) s
377 2754 m (field identifier undefined) s
271 2714 m (6) s
377 2714 m (exponent base not 2) s
271 2674 m (7) s
377 2674 m (number too large) s
271 2634 m (8) s
377 2634 m (non-terminated comment) s
271 2594 m (9) s
377 2594 m (illegal constant) s
271 2514 m (10) s
377 2514 m (identifier expected) s
271 2474 m (11) s
377 2474 m (MODULE expected) s
271 2434 m (12) s
377 2434 m (. must be followed by identifier or number) s
271 2394 m (14) s
377 2394 m (\( expected) s
271 2354 m (15) s
377 2354 m (\) expected) s
271 2314 m (16) s
377 2314 m (] expected) s
271 2274 m (17) s
377 2274 m (bad factor) s
271 2234 m (18) s
377 2234 m (relation expected) s
271 2194 m (19) s
377 2194 m (, expected) s
271 2154 m (20) s
377 2154 m (: expected) s
271 2114 m (21) s
377 2114 m (:= or \( expected) s
271 2074 m (22) s
377 2074 m (THEN expected) s
271 2034 m (23) s
377 2034 m (.. expected) s
271 1994 m (24) s
377 1994 m (; expected) s
271 1954 m (25) s
377 1954 m (. expected) s
271 1914 m (26) s
377 1914 m (END expected) s
271 1874 m (27) s
377 1874 m (DO expected) s
271 1834 m (28) s
377 1834 m (BIT, TS, OC, or identifier expected) s
271 1794 m (29) s
377 1794 m (= expected) s
271 1714 m (32) s
377 1714 m (indexed variable is not an array) s
271 1674 m (34) s
377 1674 m (. is not preceded by a record or an array variable) s
271 1634 m (35) s
377 1634 m (too few actual parameters) s
271 1594 m (36) s
377 1594 m (too many actual parameters) s
271 1554 m (37) s
377 1554 m (record type expected) s
271 1514 m (38) s
377 1514 m (expression is not a constant) s
271 1474 m (39) s
377 1474 m (integer expression expected) s
271 1434 m (40) s
377 1434 m (parameter type mismatch) s
271 1394 m (42) s
377 1394 m (index is not an integer) s
271 1354 m (43) s
377 1354 m (index out of range) s
271 1314 m (44) s
377 1314 m (incompatible types) s
271 1274 m (46) s
377 1274 m (illegal assignment, y not of type BIT) s
271 1234 m (47) s
377 1234 m (illegal assignment to input) s
271 1194 m (48) s
377 1194 m (illegal bus assignment) s
271 1154 m (49) s
377 1154 m (illegal TS-assignment to a non-bus) s
1 p
%%Page: 0 10
2105 3224 m (Syntax10.Scn.Fnt) f (9) s
177 3059 m (Syntax12m.Scn.Fnt) f (15. User Guide) s
177 2959 m (Syntax12.Scn.Fnt) f (A Lola module is compiled by the command) s
283 2876 m (Lola.Compile *) s
696 2876 m (\(text in the marked viewer\)) s
283 2816 m (Lola.Compile @) s
696 2816 m (\(text starting at most recent selection\)) s
177 2733 m (After) s
293 2733 m (a) s
341 2733 m (successful) s
552 2733 m (compilation,) s
812 2733 m (the) s
899 2733 m (generated) s
1109 2733 m (code) s
1224 2733 m (is) s
1279 2733 m ("executed",) s
1509 2733 m (resulting) s
1696 2733 m (in) s
1759 2733 m (the) s
1845 2733 m (Syntax12i.Scn.Fnt) f (Data) s
1954 2733 m (Structure) s
177 2673 m (Syntax12.Scn.Fnt) f (representing) s
420 2673 m (the) s
493 2673 m (circuit.) s
631 2673 m (This) s
719 2673 m (is) s
760 2673 m (followed) s
933 2673 m (by) s
987 2673 m (a) s
1020 2673 m (simplification) s
1283 2673 m (step) s
1371 2673 m (and) s
1453 2673 m (a) s
1486 2673 m (search) s
1616 2673 m (for) s
1680 2673 m (cycles) s
1797 2673 m (in) s
1845 2673 m (combinational) s
177 2613 m (parts) s
280 2613 m (that) s
366 2613 m (would) s
495 2613 m (produce) s
659 2613 m (race) s
747 2613 m (conditions.) s
964 2613 m (The) s
1044 2613 m (data) s
1136 2613 m (structure) s
1313 2613 m (can) s
1390 2613 m (be) s
1447 2613 m (reconverted) s
1676 2613 m (into) s
1761 2613 m (formulas) s
1937 2613 m (shown) s
2072 2613 m (by) s
177 2553 m (the command ) s
(Syntax12i.Scn.Fnt) f (Lola.Show.) s
177 2470 m (Syntax12.Scn.Fnt) f (Simplification is based on the following axioms) s
283 2395 m (Syntax10.Scn.Fnt) f (~\(~x\) = x) s
590 2395 m (LATCH\('1, x\) = x) s
283 2346 m (x * '0 = '0) s
590 2346 m (x * '1 = x) s
283 2297 m (x + '0 = x) s
590 2297 m (x + '1 = '1) s
283 2248 m (x - '0 = x) s
590 2248 m (x - '1 = ~x) s
177 2168 m (Syntax12.Scn.Fnt) f (Further commands are) s
283 2085 m (LSB.Init) s
637 2085 m (removes the Data Structure generated and collects free heap space) s
283 2025 m (LSB.OpenLog) s
637 2025 m (reopens the log viewer) s
283 1965 m (LSB.ClearLog) s
637 1965 m (delete text in log viewer) s
177 1845 m (Syntax12m.Scn.Fnt) f (16. Implementation Notes) s
177 1745 m (Syntax12.Scn.Fnt) f (Knowledge) s
402 1745 m (about) s
529 1745 m (the) s
607 1745 m (Data) s
713 1745 m (Structure) s
902 1745 m (generated) s
1103 1745 m (by) s
1163 1745 m (the) s
1241 1745 m (Lola) s
1335 1745 m (System) s
1485 1745 m (is) s
1531 1745 m (necessary) s
1723 1745 m (when) s
1845 1745 m (building) s
2015 1745 m (other) s
177 1685 m (tools, such as comparators with other structures \(like layouts\) or automatic circuit generators.) s
177 1602 m (The) s
260 1602 m (following) s
448 1602 m (interface) s
623 1602 m (components) s
870 1602 m (of) s
922 1602 m (module) s
1081 1602 m (LSB) s
1164 1602 m (\(Lola) s
1270 1602 m (System) s
1416 1602 m (Base\)) s
1530 1602 m (are) s
1601 1602 m (relevant) s
1761 1602 m (for) s
1827 1602 m (the) s
1901 1602 m (subsequent) s
177 1542 m (presentation:) s
283 1467 m (Syntax10.Scn.Fnt) f (CONST NameLen = 32;) s
283 1369 m (\(*values of fct*\)  bit = 0; ts = 1; oc = 2; integer = 3; array = 4; record = 5; sect = 6;) s
377 1320 m (buf = 7; not = 8; and = 9; or = 10; xor = 11; mux = 12; mux1 = 13;) s
377 1271 m (reg = 14; reg1 = 15; latch = 16; sr = 17; tsg = 18; link = 19;) s
283 1173 m (\(*values of class*\)  var = 0; in = 1; out = 2; io = 3;) s
283 1101 m (TYPE Name = ARRAY NameLen OF CHAR;) s
353 1052 m (Signal = POINTER TO SignalDesc;) s
353 1003 m (Variable = POINTER TO VarDesc;) s
353 931 m (SignalDesc = RECORD) s
495 882 m (x, y: Signal;) s
495 833 m (fct, val, u, v: SHORTINT) s
424 784 m (END ;) s
353 712 m (VarDesc = RECORD \(SignalDesc\)) s
495 663 m (name: Name;) s
495 614 m (class: SHORTINT;) s
495 565 m (next, dsc: Variable) s
424 516 m (END ;) s
283 444 m (VAR org, zero, one, clk: Variable;) s
353 395 m (Log: Texts.Text;) s
283 323 m (PROCEDURE WriteName\(VAR W: Texts.Writer; v: Variable\);) s
283 274 m (PROCEDURE This\(org: Variable; VAR name: ARRAY OF CHAR\): Variable;) s
283 225 m (PROCEDURE New\(f: SHORTINT; x, y: Signal\): Signal;) s
1 p
%%Page: 0 11
2085 3224 m (Syntax10.Scn.Fnt) f (10) s
283 3127 m (PROCEDURE NewVar\(f, val: SHORTINT; x, y: Signal; next: Variable; VAR name: ARRAY OF CHAR\): Variable;) s
283 3078 m (PROCEDURE Simplify\(x: Variable\);) s
283 3029 m (PROCEDURE Loops\(x: Variable\);) s
283 2980 m (PROCEDURE Show\(x: Variable; lev: INTEGER\);) s
283 2931 m (PROCEDURE Assign\(v: Variable\);) s
177 2834 m (Syntax12.Scn.Fnt) f (The parameter x of procedures ) s
(Syntax12i.Scn.Fnt) f (Simplify, Loops, Show) s
(Syntax12.Scn.Fnt) f ( must not be NIL.) s
177 2751 m (The) s
263 2751 m (structure) s
446 2751 m (is) s
492 2751 m (a) s
531 2751 m (binary) s
663 2751 m (tree) s
752 2751 m (of) s
807 2751 m (Syntax12i.Scn.Fnt) f (Variables) s
978 2751 m (Syntax12.Scn.Fnt) f (rooted) s
1118 2751 m (in) s
1172 2751 m (the) s
1250 2751 m (global) s
1380 2751 m (variable) s
1540 2751 m (Syntax12i.Scn.Fnt) f (org.) s
1627 2751 m (Syntax12.Scn.Fnt) f (The) s
1713 2751 m (field) s
1810 2751 m (Syntax12i.Scn.Fnt) f (name) s
1924 2751 m (Syntax12.Scn.Fnt) f (indicates) s
2104 2751 m (a) s
177 2691 m (variable's) s
360 2691 m (identifier,) s
552 2691 m (and) s
638 2691 m (Syntax12i.Scn.Fnt) f (fct) s
698 2691 m (Syntax12.Scn.Fnt) f (indicates) s
877 2691 m (its) s
935 2691 m (type.) s
1039 2691 m (If) s
1080 2691 m (it) s
1121 2691 m (is) s
1164 2691 m (Syntax12i.Scn.Fnt) f (Array) s
1271 2691 m (Syntax12.Scn.Fnt) f (or) s
1325 2691 m (Syntax12i.Scn.Fnt) f (Record,) s
1470 2691 m (Syntax12.Scn.Fnt) f (the) s
1545 2691 m (field) s
1640 2691 m (Syntax12i.Scn.Fnt) f (dsc) s
1709 2691 m (Syntax12.Scn.Fnt) f (denotes) s
1870 2691 m (the) s
1945 2691 m (list) s
2013 2691 m (of) s
2065 2691 m (the) s
177 2631 m (variable's) s
360 2631 m (components) s
608 2631 m (linked) s
738 2631 m (by) s
796 2631 m (the) s
872 2631 m (field) s
968 2631 m (Syntax12i.Scn.Fnt) f (next.) s
1070 2631 m (Syntax12.Scn.Fnt) f (Note) s
1176 2631 m (that) s
1266 2631 m (Syntax12i.Scn.Fnt) f (org) s
1339 2631 m (Syntax12.Scn.Fnt) f (designates) s
1546 2631 m (a) s
1582 2631 m (pseudo-variable) s
1900 2631 m (standing) s
2073 2631 m (for) s
177 2571 m (the record containing all global variables of the module. Its name is that of the module.) s
177 2488 m (The) s
265 2488 m ("value") s
409 2488 m (of) s
466 2488 m (a) s
507 2488 m (variable) s
669 2488 m (is) s
717 2488 m (represented) s
955 2488 m (by) s
1017 2488 m (an) s
1083 2488 m (expression) s
1298 2488 m (tree) s
1389 2488 m (rooted) s
1531 2488 m (in) s
1587 2488 m (field) s
1687 2488 m (x.) s
1738 2488 m (This) s
1833 2488 m (tree) s
1924 2488 m (consists) s
2088 2488 m (of) s
177 2428 m (elements) s
359 2428 m (of) s
409 2428 m (type) s
499 2428 m (Syntax12i.Scn.Fnt) f (Signal.) s
626 2428 m (Syntax12.Scn.Fnt) f (Each) s
727 2428 m (node) s
834 2428 m (denotes) s
993 2428 m (an) s
1052 2428 m (operator) s
1223 2428 m (specified) s
1397 2428 m (by) s
1452 2428 m (field) s
1545 2428 m (Syntax12i.Scn.Fnt) f (fct) s
1601 2428 m (Syntax12.Scn.Fnt) f (and) s
1683 2428 m (operands) s
1866 2428 m (given) s
1974 2428 m (by) s
2028 2428 m (fields) s
177 2368 m (x) s
210 2368 m (and) s
293 2368 m (y.) s
335 2368 m (A) s
374 2368 m (node) s
481 2368 m (with) s
577 2368 m (Syntax12i.Scn.Fnt) f (fct) s
633 2368 m (=) s
669 2368 m (not) s
742 2368 m (Syntax12.Scn.Fnt) f (uses) s
834 2368 m (y) s
864 2368 m (as) s
914 2368 m (its) s
968 2368 m (operand,) s
1144 2368 m (and) s
1226 2368 m (the) s
1298 2368 m (operators) s
1485 2368 m (MUX) s
1594 2368 m (and) s
1676 2368 m (REG,) s
1775 2368 m (having) s
1908 2368 m (3) s
1944 2368 m (operands,) s
177 2308 m (are represented by a pair of nodes) s
283 2225 m (Syntax10.Scn.Fnt) f (x + y) s
755 2225 m (\(or, x, y\)) s
283 2165 m (~x) s
755 2165 m (\(not, NIL, x\)) s
283 2105 m (MUX\(sel: x, y\)) s
755 2105 m (\(mux, sel, \(mux1, x, y\)\)) s
283 2045 m (REG\(ck: en, d\)) s
755 2045 m (\(reg, ck, \(reg1, en, d\)\)) s
177 1962 m (Syntax12.Scn.Fnt) f (The) s
261 1962 m ("value") s
401 1962 m (x) s
436 1962 m (of) s
488 1962 m (a) s
524 1962 m (variable) s
681 1962 m (of) s
733 1962 m (type) s
825 1962 m (TS,) s
895 1962 m (to) s
948 1962 m (which) s
1076 1962 m (expressions) s
1303 1962 m (e0,) s
1373 1962 m (e1,) s
1443 1962 m (e2,) s
1513 1962 m (...) s
1561 1962 m (are) s
1633 1962 m (assigned,) s
1815 1962 m (is) s
1858 1962 m (a) s
1894 1962 m (list) s
1962 1962 m (of) s
2014 1962 m (nodes) s
177 1902 m (with) s
273 1902 m (Syntax12i.Scn.Fnt) f (fct) s
329 1902 m (=) s
366 1902 m (link) s
(Syntax12.Scn.Fnt) f (,) s
455 1902 m (linked) s
582 1902 m (by) s
637 1902 m (the) s
710 1902 m (y-field.) s
858 1902 m (The) s
939 1902 m (x-fields) s
1094 1902 m (denote) s
1235 1902 m (the) s
1307 1902 m (expression) s
1514 1902 m (trees) s
1614 1902 m (for) s
1678 1902 m (e0,) s
1745 1902 m (e1,) s
1812 1902 m (e2,) s
1879 1902 m (...) s
1924 1902 m (.) s
1947 1902 m (The) s
2027 1902 m (same) s
177 1842 m (holds for variables of type OC.) s
283 1759 m (Syntax10.Scn.Fnt) f (bus := e0 | x0) s
283 1699 m (bus := e1 | x1) s
755 1699 m (bus.x  =  \(ts, \(link, \(tsg, e0, x0\), \(link, \(tsg, e1, x1\), NIL\)\)\)) s
283 1639 m (ocb := x0) s
283 1579 m (ocb := x1) s
755 1579 m (ocb.x  =  \(oc, \(link, x0, \(link, x1, NIL\)\)\)) s
177 1496 m (Syntax12.Scn.Fnt) f (The) s
259 1496 m (field) s
353 1496 m (y) s
385 1496 m (of) s
436 1496 m (Syntax12i.Scn.Fnt) f (Variables) s
603 1496 m (Syntax12.Scn.Fnt) f (is) s
645 1496 m (used) s
746 1496 m (as) s
798 1496 m (a) s
833 1496 m (back-pointer) s
1093 1496 m (designating) s
1318 1496 m (their) s
1418 1496 m (immediate) s
1633 1496 m (ancestor.) s
1814 1496 m (This) s
1903 1496 m (field) s
1997 1496 m (is) s
2038 1496 m (used) s
177 1436 m (by) s
234 1436 m (procedure) s
437 1436 m (Syntax12i.Scn.Fnt) f (WriteName) s
656 1436 m (Syntax12.Scn.Fnt) f (for) s
723 1436 m (composing) s
942 1436 m (a) s
978 1436 m (variable's) s
1160 1436 m (full) s
1235 1436 m (name.) s
1367 1436 m (The) s
1450 1436 m (field) s
1545 1436 m (Syntax12i.Scn.Fnt) f (val) s
1609 1436 m (Syntax12.Scn.Fnt) f (is) s
1652 1436 m (available) s
1826 1436 m (for) s
1893 1436 m (use) s
1970 1436 m (by) s
2026 1436 m (other) s
177 1376 m (programs, and ) s
(Syntax12i.Scn.Fnt) f (u) s
(Syntax12.Scn.Fnt) f ( and ) s
(Syntax12i.Scn.Fnt) f (v) s
(Syntax12.Scn.Fnt) f ( may contain position information in layouts.) s
1 p
%%Trailer   
OberonClose
