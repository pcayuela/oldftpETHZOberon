Fill out this template and upload it with your package.  Then
send mail to <muller@inf.ethz.ch> with instructions where to
move the package to.

Date
-----
1999.03.16 07:33:57

Name
-----
HoCW7, comprising:
- HoCW7Mod.Arc	(Oberon archive)
- HoCW7Prog.Arc	(Oberon archive)
- HoCW7.desc		(Oberon text)
- HoCW7.ASCII.Text		(ASCII text)

Description
---------
This is a collection of useful modules for mathematics, computation, string handling, number conversion, graphics, file editing and sorting purposes.
The modules are *mostly* Oberon-2,
the modules using              Oberon-2 System3 are cited in the comments below.

Modules exporting commands:
..................................................
DOSBackupCH.Mod  ---  (DOSBackup with file length, date, for S3)
SortDir.Mod   ---  (Sort a directory list generated by System.Directory or DOSBackupCH.Directory \s\d\a)
Time.Mod   ---  (Write system date and time to the place of the cursor or, if not set, to the System.Log)
TGX.Mod   ---  (Editor extension:	"InfoTGX" is an Iconizer which contains the following text:
^x=CTRLx,	^QX  means: ^Q+^x  or ^Q+x   Explains TGX editor
           ^x := CTRL+x,  ^QX  := ^Q+^x  or ^Q+x
	Scroll:	       ^Qx  := ^Q+x,  but lift ^ before pressing x !! -Start/end of document	^QR	^QC
-up/down one viewer	^R  	^C	(= PageUp/Dn)
-up/down one line	^W	^Y	( European keybd )
	Go, scroll if necessary
-Start/end of vi	^QE	^QX
-Start/end of line	^Qs	^QD	(= Home/End)
-up/down one line	^E	^X	(= Arrow  up/down)
-one character  <-/->	^S	^D	(= Arrow   <- / -> )
-one word         <-/->	^A	^F
-end of  word    <-/->	^B	^Z
	Delete,  save to recall buffer	yes		no
-character before/after cursor	^H	^G	^-H	^-G
-until start of next/end word	^\T	^\H	^-T	^-H
-until start/end of line	^\s	^\D	^-s	^-D
-line, leave LF	^\Y		^-Y
Save selection to recall buffer	^QK or ^N
Insert recall buffer at caret	^K
Capitalize next character	^]	^[ ?	(=SHIFT up/down)
Toggle ^S,^A <-> ä,ß	^QA		TGX.ToggleUmlaut
^Z+^\T+TAB	^T
)  end of text in Iconizer "InfoTGX"

Lower level modules (which mostly do not export commands):
...........................................................................
see below


Author
------
Christian W. Hoffmann
Swiss Federal Institute for Forest, Snow and Landscape Research
CH-8903 Birmensdorf, Switzerland
phone: ++41-1-739 22 77    fax  : ++41-1-739 22 15 
e-mail:  hoffmann@wsl.ch
WWW: http://www.wsl.ch/land/dynamics/modeling/hoffmann.htm

Corrections and comments are most welcome.

Directory
---------
ftp://ftp.inf.ethz.ch/pub/software/Oberon/System3/Contrib/HoCW/

Notes
-----
installation instruction or/and further information
about my_package.

 --> The individual files are named  "*.Mod", but the compiled modules are named  "HoCW*".
           If you want to avoid confusion on the level of file names, do  System.CopyFiles  "*" => "HoCW*".
           To do do this in one swoop, see the description of TGX.Call (Watson.ShowObj TGX.Call)
 
 --> Some of the modules have a second part which consists of a compilable test module
 		with a name starting with "X" prepended to the module to test.
 		It usually has the text in it:   	(* Compiler.Compile @\s      Analyzer.Analyze @   System.Free ... *)
	
1. FTP: switch to  'binary', then
	get  the four files  HoCW7*
2. Copying to Oberon,  "_" = UNDERSCORE!
	Copy using your system's copy mechanism, iff your Oberon implementation supports long file names
	        (Windows95, WindowsNT, Unix, ..)
	Otherwise use System.CopyFiles with the conventions for DOS file names:
	    System.CopyFiles  ../_HoCW7* => HoCW7*~
3. Viewing the contents:
	Desktops.OpenDoc  HoCW7*   or middle-right click on them
4. Extracting
	Compress.ExtractAll 
5. In your log file there is a protocol of the modules which are generated in your current directory
The modules are *mostly* Oberon-1,
the modules using              Oberon-2 System3 are cited in the comments.

HoCW7Mod.Arc  contains: (Use the .Compile commands to compile the modules)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Use the .Compile commands to compile the modules. They are ordered, basic ones first.
	Builder.Compile \Ns	BitOp.Mod	RealHex.Mod	Util.Mod	~
	Builder.Compile \s 
Chars.Mod	Display3X.Mod	IAU1976.Mod	ListBS.Mod	Math0.Mod	SortLib.Mod	TextsLib.Mod
Arc.Mod	ArcL.Mod	ColorC.Mod	GetAndRun.Mod	Random2.Mod	Sets.Mod
  Colors.Mod 	Math2.Mod	OutTG.Mod
    Aperture.Mod	Complex2.Mod	In2.Mod	InX.Mod	Matrix1.Mod	Matrix2.Mod	Str.Mod	Tests.Mod
      Complex3.Mod	NameLog.Mod	Parse.Mod	Str1.Mod	XYGraph1.Mod
        Str2.Mod 	TimeDate.Mod	XYGraph2.Mod
	     Astro1.Mod	XYGraph3.Mod
	        BasicFigures2.Mod
~  (* Oberon-2 System3: TextsLib.Mod	OutTG.Mod	BasicFigures2.Mod *)

HoCW7Prog.Arc  contains: (Use the .Compile commands to compile the modules)
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
own modules:
	Builder.Compile \Ns 	DOSBackupCH.Mod ~
	Builder.Compile  \s	Calcul3.Mod	SortDir.Mod	Time.Mod	TGX.Mod	~
	Builder.Compile  \s	ViewerColors.Mod~
Less important own:
Builder.Compile  \s
ChkKeyb.Mod	XYCockroach.Mod	FlushFile.Mod	ForFlyP.Mod
LinearEquations.Mod	Mandelbrot2.Mod	Picto2Test.Mod	PictoGraphs.Mod	PictoTest.Mod			
Tar.Mod	WriteW.Mod	~

--- DOSBackupCH.Tool	MyKeys.Text	SortDir.Tool	TGX.Menus  System3.ch.Tool SysBack.Tool	SysDir.Tool  ---

  (* Oberon-2 System3: 
 Calcul3.Mod	DOSBackupCH.Mod   SortDir.Mod	Time.Mod	TGX.Mod 
 ChkKeyb.Mod	ForFly.Mod	LinearEquations.Mod  Tar.Mod	WriteW.Mod  *)

-------
Have fun!
